{"version":3,"sources":["enums/page-view/index.ts","icons/todolist.svg","icons/notes.svg","icons/passwords.svg","icons/search.svg","helpers/router/index.ts","store/user/constants.ts","models/index.ts","helpers/database/index.ts","models/user/UserModel.ts","enums/notes/index.ts","store/user/index.ts","helpers/user/index.ts","helpers/mappers/index.ts","models/note/NoteModel.ts","enums/todo-list/index.ts","store/notes/index.ts","store/passwords/index.ts","models/todo/TodoIteModel.ts","models/todo/TodoGroupModel.ts","store/todo-list/index.ts","store/page-view/index.ts","store/index.ts","types/todo-list/index.ts","pages/service/error404/index.tsx","components/page-content/index.tsx","components/context-menu/utils.ts","components/context-menu/index.tsx","components/list/styles.ts","components/list/AddListItem.tsx","components/list/List.tsx","components/list/ListItem.tsx","pages/todo-list/components/styles.ts","icons/Star.tsx","pages/todo-list/components/TodoGroupControl.tsx","components/editable-title/index.tsx","components/list/ItemIcon.tsx","pages/todo-list/types.ts","pages/search/types/index.ts","components/textarea/index.tsx","pages/todo-list/components/DescriptionTextarea.tsx","pages/todo-list/components/RightSide.tsx","pages/todo-list/components/TodoListContent.tsx","pages/todo-list/views/main.tsx","pages/todo-list/utils/useTodoListFilter.ts","components/editor/constants.ts","components/editor/index.tsx","components/code-editor/constants.ts","components/code-editor/styled.ts","icons/save.svg","components/code-editor/index.tsx","pages/notes/utils/constants.ts","pages/notes/components/NotesContent.tsx","pages/notes/components/NotesNavigation.tsx","pages/notes/utils/useNotesFilter.ts","pages/notes/views/main.tsx","pages/passwords/views/main.tsx","pages/search/utils/constants.ts","pages/search/components/styled.ts","pages/search/components/SearchHeader.tsx","pages/search/utils/useSearch.ts","pages/search/views/main.tsx","pages/index.tsx","appStyles.ts","icons/Moon.tsx","icons/Sun.tsx","icons/Language.tsx","App.tsx","index.tsx"],"names":["Language","Theme","styles","props","className","stroke","fill","strokeWidth","viewBox","height","width","xmlns","fillRule","clipRule","d","routes","DEFAULT_USERNAME","config","db","name","version","displayName","size","window","openDatabase","Error","sqlQuery","query","args","Promise","resolve","reject","transaction","tx","executeSql","result","error","createQueryHandler","modelInitRunner","model","a","MODEL_NAME","rows","length","init","UserModel","this","username","password","privateKey","settings","userId","item","then","initial","add","NoteType","SubType","UserStore","data","makeAutoObservable","Boolean","id","parsed","split","toUpperCase","slice","join","createUsernameSymbols","mapSqlResultToArray","Array","from","map","_","index","NoteModel","priority","lastProps","noteId","resultItem","title","type","Date","getTime","Rich","insertId","selectById","content","lastUpdate","subType","rowsAffected","TodoDefaultListGroup","NotesStore","rawItems","loadItems","todayItem","addNote","time","dateCreated","base","isToday","i18n","t","isYesterday","format","pageView","formatOptions","items","filter","sort","b","value","label","additional","find","reduce","acc","Object","assign","selectAllByUserId","note","addedNote","push","update","notesMap","findIndex","delete","updateNote","PasswordStore","TODO_DEFAULT_LIST_GROUP_VALUES","values","Number","isInteger","TodoItemModel","description","state","groupId","steps","orderIndex","JSON","stringify","itemId","rest","parse","TodoGroupModel","getById","removeByGroupId","TodoListStore","groups","loadData","itemsGroupMap","concat","All","Priority","Today","dateCreate","itemsMapForGroups","selectAllForUserId","group","addedGroup","removeById","addedItem","updatedItem","PageViewStore","expandedSideBar","language","Ru","theme","Dark","currentUserId","toggleExpanded","changeTheme","newTheme","changeLanguage","lang","savedSettingsJson","localStorage","getItem","addEventListener","setItem","savedSettings","key","locale","ru","enUS","user","notes","todoList","use","initReactI18next","resources","EnUS","translation","lng","fallbackLng","interpolation","escapeValue","reaction","selectUserById","loadedUser","TodoState","Error404","useTranslation","PageContent","navigation","children","Content","FlexboxGrid","Item","colspan","handlerBuilder","handler","event","target","parentElement","dataset","uid","ContextMenu","Dropdown","Menu","icon","onClick","Container","styled","div","ListTitle","TodoListElement","List","LIST_ITEM_STYLE","css","ListItem","AddItemContainer","ItemIcon","ItemContent","AddListItem","onAddItem","placeholder","useState","focused","setFocused","setValue","onRemoveFocused","useCallback","onPressEnterHandler","isShowInput","align","justify","Input","autoFocus","onChange","onPressEnter","onBlur","TodoList","addPlaceholder","emptyPlaceholder","empty","restProps","TodoListItem","postfix","active","contextMenuId","contextMenuUId","NavContainer","ListTasksContainer","TopListTasksContainer","StyledTodoList","CountItemsContainer","StyledListItem","StyledContent","Title","h3","ListContainer","StepsState","Star","filled","observer","activeKey","changeActiveGroup","onAddGroup","addGroup","onDeleteGroup","removeGroup","contextMenuItems","useMemo","countItemsInGroup","Divider","span","EditableTitle","onSave","onSaveHandler","useEffect","val","ItemsFilter","StyledSvg","svg","Empty","Success","FilledSuccess","TodoIcon","InProgress","hovered","Done","SearchGroup","Textarea","style","ref","useRef","autosize","current","as","resize","DescriptionTextarea","onEdit","currentValue","setCurrentValue","ScrollContainer","TitleContainer","RightSide","selectedId","onClose","onChangeState","todoMap","lastChanged","onUpdateTitle","updateItem","onAddStep","onRemoveStep","stepId","onEditStepTitle","newSteps","onEditStepState","isDone","IconButton","appearance","formatDistance","includeSeconds","removeItem","changeFilter","setSelectedId","itemsMap","onCloseRightSide","center","right","addItem","todoId","newState","onRemoveItem","onChangeItemsFilter","onSaveTitle","console","log","currentGroup","disabledRemove","includes","readOnly","ButtonToolbar","ButtonGroup","Button","placement","renderToggle","disabled","stopPropagation","newValue","completedCount","search","useLocation","history","useHistory","String","replace","useTodoListFilter","EDITOR_INIT_OPTIONS","autoresize_top_margin","autoresize_on_init","plugins","menubar","toolbar","reloading","setReloading","isDarkTheme","smallLanguage","setTimeout","apiKey","tinyApiKey","skin","undefined","content_css","LANGUAGES_LIST","Header","EditorContainer","setLanguage","localTheme","Light","languagesOptions","onSaveContent","debounce","onChangeValue","onChangeLanguage","SelectPicker","cleanable","searchable","SUB_TYPE_OPTIONS","Code","currentItem","onSaveEditorContent","getContent","onSaveCodeEditorContent","onChangeSubType","nextType","onDeleteItem","deleteNote","onChangePriority","changePriority","isRichEditor","initialValue","StyledList","sortedItems","timeItems","onAddNote","onActiveNote","onDeleteNote","onChangeItem","useNotesFilter","parseNumbers","Passwords","SEARCH_GROUP_OPTIONS","Todo","Notes","SearchHeaderContainer","SearchControl","SearchHeader","changeSearch","onChangeQuery","onChangeGroups","TagPicker","block","useSearch","arrayFormat","change","Search","Routes","exact","path","component","to","LogoContainer","LogoTitle","StyledSidebar","Sidebar","UserAvatar","Avatar","UserTitle","p","Moon","focusable","Sun","pathname","onSelectOption","ruRU","CustomProvider","collapsible","Sidenav","expanded","Body","Nav","eventKey","Link","onSelect","usernameSymbols","divider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de981f13.chunk.js","sourcesContent":["export enum Language {\r\n  Ru = \"ru_RU\",\r\n  EnUS = \"en_EN\",\r\n}\r\n\r\nexport enum Theme {\r\n  Light = \"light\",\r\n  Dark = \"dark\",\r\n}\r\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg className={(styles[\"icon-svg\"] || \"icon-svg\") + \" \" + (styles[\"rs-icon\"] || \"rs-icon\")} stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 16 16\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M3.75 4.48h-.71L2 3.43l.71-.7.69.68L4.81 2l.71.71-1.77 1.77zM6.99 3h8v1h-8V3zm0 3h8v1h-8V6zm8 3h-8v1h8V9zm-8 3h8v1h-8v-1zM3.04 7.48h.71l1.77-1.77-.71-.7L3.4 6.42l-.69-.69-.71.71 1.04 1.04zm.71 3.01h-.71L2 9.45l.71-.71.69.69 1.41-1.42.71.71-1.77 1.77zm-.71 3.01h.71l1.77-1.77-.71-.71-1.41 1.42-.69-.69-.71.7 1.04 1.05z\" stroke=\"none\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg className={(styles[\"icon-svg\"] || \"icon-svg\") + \" \" + (styles[\"rs-icon\"] || \"rs-icon\")} stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 24 24\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path fill=\"none\" strokeWidth=\"2\" d=\"M3 1v22h13l5-5V1H3zm3 16h5m-5-4h12M6 9h10M3 5h18m0 12h-6v6\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg className={(styles[\"icon-svg\"] || \"icon-svg\") + \" \" + (styles[\"rs-icon\"] || \"rs-icon\")} stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 24 24\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><g stroke=\"none\"><path fill=\"none\" d=\"M0 0h24v24H0z\" /><path d=\"M18 8h2a1 1 0 011 1v12a1 1 0 01-1 1H4a1 1 0 01-1-1V9a1 1 0 011-1h2V7a6 6 0 1112 0v1zM5 10v10h14V10H5zm6 4h2v2h-2v-2zm-4 0h2v2H7v-2zm8 0h2v2h-2v-2zm1-6V7a4 4 0 10-8 0v1h8z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg className={(styles[\"icon-svg\"] || \"icon-svg\") + \" \" + (styles[\"rs-icon\"] || \"rs-icon\")} stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 24 24\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><g stroke=\"none\"><path fill=\"none\" d=\"M0 0h24v24H0z\" /><path d=\"M11 2c4.968 0 9 4.032 9 9s-4.032 9-9 9-9-4.032-9-9 4.032-9 9-9zm0 16c3.867 0 7-3.133 7-7 0-3.868-3.133-7-7-7-3.868 0-7 3.132-7 7 0 3.867 3.132 7 7 7zm8.485.071l2.829 2.828-1.415 1.415-2.828-2.829 1.414-1.414z\" /></g></svg>);","export const routes = {\r\n  ROOT: \"/\",\r\n  LOGIN: \"/login\",\r\n  SEARCH: \"/search\",\r\n  REGISTRATION: \"/registration\",\r\n  TODO_LIST: \"/todo-list\",\r\n  NOTES: \"/notes\",\r\n  PASSWORDS: \"/passwords\",\r\n  SETTINGS: \"/settings\",\r\n  CHANGE_USER: '/change-user'\r\n};\r\n","export const DEFAULT_USER_ID = 1;\r\n\r\nexport const DEFAULT_USERNAME = \"Yerzhan\";\r\n","import { createQueryHandler } from \"helpers/database\";\r\n\r\nimport { SQLQueryResult } from \"types/database\";\r\n\r\nimport config from \"config.json\";\r\n\r\nconst {\r\n  db: { name, version, displayName, size },\r\n} = config;\r\n\r\nconst db = window.openDatabase(name, version, displayName, size);\r\n\r\nif (db === null) {\r\n  throw Error(\"Database not connected!\");\r\n}\r\n\r\nconst sqlQuery = createQueryHandler(db);\r\n\r\nconst modelInitRunner = async (model: {\r\n  MODEL_NAME: string;\r\n  init: () => Promise<SQLQueryResult>;\r\n}) => {\r\n  const {\r\n    result: { rows },\r\n  } = await sqlQuery(\r\n    `SELECT * FROM sqlite_master WHERE type='table' AND name=?`,\r\n    [model.MODEL_NAME]\r\n  );\r\n\r\n  if (!rows.length) {\r\n    await model.init();\r\n\r\n    return Promise.resolve(true);\r\n  }\r\n\r\n  return Promise.resolve(false);\r\n};\r\n\r\nexport { db, sqlQuery, modelInitRunner };\r\n","import { SQLQueryResult } from \"types/database\";\r\n\r\nexport const createQueryHandler =\r\n  (db: Database) =>\r\n  (query: string, args: ObjectArray = []) =>\r\n    new Promise<SQLQueryResult>((resolve, reject) =>\r\n      db.transaction((tx) =>\r\n        tx.executeSql(\r\n          query,\r\n          args,\r\n          (tx, result) => resolve({ tx, result }),\r\n          (tx, error) => {\r\n            reject({ tx, error });\r\n\r\n            return true;\r\n          }\r\n        )\r\n      )\r\n    );\r\n","import { SQLQueryResult } from \"types/database\";\r\nimport { User, UserFull } from \"types/user\";\r\n\r\nimport { DEFAULT_USERNAME } from \"store/user/constants\";\r\n\r\nimport { modelInitRunner, sqlQuery } from \"..\";\r\n\r\nclass UserModel {\r\n  public static MODEL_NAME = \"user\";\r\n\r\n  public static init(): Promise<SQLQueryResult> {\r\n    return sqlQuery(\r\n      `CREATE TABLE ${this.MODEL_NAME} (id INTEGER PRIMARY KEY, username TEXT, settings TEXT, password TEXT, privateKey TEXT, lastLogin REAL)`\r\n    );\r\n  }\r\n\r\n  public static add({\r\n    username = DEFAULT_USERNAME,\r\n    password = null,\r\n    privateKey = null,\r\n    settings = \"{}\",\r\n  }: Partial<Omit<UserFull, \"id\">>) {\r\n    return sqlQuery(\r\n      `INSERT INTO ${this.MODEL_NAME} (username, settings, password, privateKey) values(?, ?, ?, ?)`,\r\n      [username, settings, password, privateKey]\r\n    );\r\n  }\r\n\r\n  public static async selectUserById(userId: number): Promise<User> {\r\n    const { result } = await sqlQuery(\r\n      \"SELECT id, username, settings, lastLogin FROM ? WHERE id = ?\",\r\n      [this.MODEL_NAME, userId]\r\n    );\r\n\r\n    return result.rows.item(0);\r\n  }\r\n}\r\n\r\nmodelInitRunner(UserModel).then((initial) => {\r\n  if (initial) {\r\n    UserModel.add({});\r\n  }\r\n});\r\n\r\nexport default UserModel;\r\n","export enum NoteType {\r\n  base,\r\n  time,\r\n}\r\n\r\nexport enum SubType {\r\n  Rich,\r\n  Code,\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\nimport { createUsernameSymbols } from \"helpers/user\";\r\n\r\nimport { User } from \"types/user\";\r\n\r\nimport { DEFAULT_USERNAME, DEFAULT_USER_ID } from \"./constants\";\r\n\r\nclass UserStore {\r\n  public data: User | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  public get authorized(): boolean {\r\n    return Boolean(this.data);\r\n  }\r\n\r\n  public get userId() {\r\n    return this.data?.id || DEFAULT_USER_ID;\r\n  }\r\n\r\n  public get usernameSymbols() {\r\n    return createUsernameSymbols(this.username);\r\n  }\r\n\r\n  public get username() {\r\n    return this.data?.username || DEFAULT_USERNAME;\r\n  }\r\n}\r\n\r\nexport default UserStore;\r\n","export const createUsernameSymbols = (username: string) => {\r\n  const parsed = username.split(\" \");\r\n\r\n  if (parsed.length === 1) {\r\n    return (username[0] + username[1]).toUpperCase();\r\n  }\r\n\r\n  return parsed.slice(0, 2).join(\"\").toUpperCase();\r\n};\r\n","export const mapSqlResultToArray = ({ rows }: SQLResultSet) =>\r\n  Array.from({ length: rows.length })\r\n    .fill(0)\r\n    .map((_, index) => rows.item(index));\r\n","import { SubType } from \"enums/notes\";\r\nimport { mapSqlResultToArray } from \"helpers/mappers\";\r\n\r\nimport { Note } from \"types/notes\";\r\n\r\nimport { modelInitRunner, sqlQuery } from \"..\";\r\n\r\nclass NoteModel {\r\n  public static MODEL_NAME = \"note_model\";\r\n\r\n  public static init() {\r\n    return sqlQuery(\r\n      `CREATE TABLE ${this.MODEL_NAME} (\r\n            id INTEGER PRIMARY KEY, \r\n            title TEXT,\r\n            userId INTEGER,\r\n            content TEXT,\r\n            type INTEGER,\r\n            subType INTEGER,\r\n            priority BOOL,\r\n            dateCreated REAL,\r\n            lastUpdate REAL\r\n        )`\r\n    );\r\n  }\r\n\r\n  public static async selectAllByUserId(userId: number) {\r\n    const { result } = await sqlQuery(\r\n      `SELECT * FROM ${this.MODEL_NAME} WHERE userId = ?`,\r\n      [userId]\r\n    );\r\n\r\n    return mapSqlResultToArray(result).map(({ priority, ...lastProps }) => ({\r\n      priority: priority === \"true\",\r\n      ...lastProps,\r\n    }));\r\n  }\r\n\r\n  public static async selectById(noteId: number) {\r\n    const { result } = await sqlQuery(\r\n      `SELECT * FROM ${this.MODEL_NAME} WHERE id = ?`,\r\n      [noteId]\r\n    );\r\n\r\n    if (!result.rows.length) {\r\n      return null;\r\n    }\r\n\r\n    const resultItem = result.rows.item(0);\r\n\r\n    return { ...resultItem, priority: resultItem.priority === \"true\" };\r\n  }\r\n\r\n  public static async add({\r\n    title,\r\n    userId,\r\n    type,\r\n  }: Pick<Note, \"title\" | \"userId\" | \"type\">) {\r\n    const { result } = await sqlQuery(\r\n      `INSERT INTO ${this.MODEL_NAME} (title, content, userId, dateCreated, priority, type, subType) values(?, ?, ?, ?, ?, ?, ?)`,\r\n      [title, \"\", userId, new Date().getTime(), false, type, SubType.Rich]\r\n    );\r\n\r\n    if (!result.insertId) {\r\n      return null;\r\n    }\r\n\r\n    return NoteModel.selectById(result.insertId);\r\n  }\r\n\r\n  public static async update(\r\n    noteId: number,\r\n    {\r\n      content,\r\n      title,\r\n      lastUpdate = new Date().getTime(),\r\n      priority = false,\r\n      subType\r\n    }: Partial<Omit<Note, \"id\" | \"userId\" | \"dateCreated\">>\r\n  ) {\r\n    const { result } = await sqlQuery(\r\n      `UPDATE ${this.MODEL_NAME} SET title = ?, content = ?, lastUpdate = ?, priority = ?, subType = ? WHERE id = ?`,\r\n      [title, content, lastUpdate, priority, subType, noteId]\r\n    );\r\n\r\n    if (!result.rowsAffected) {\r\n      return null;\r\n    }\r\n\r\n    return NoteModel.selectById(noteId);\r\n  }\r\n\r\n  public static async delete(noteId: number) {\r\n    const { result } = await sqlQuery(\r\n      `DELETE FROM ${this.MODEL_NAME} WHERE id = ?`,\r\n      [noteId]\r\n    );\r\n\r\n    return result.rowsAffected > 0;\r\n  }\r\n}\r\n\r\nmodelInitRunner(NoteModel);\r\n\r\nexport default NoteModel;\r\n","export enum TodoDefaultListGroup {\r\n  All = -1,\r\n  Today = -2,\r\n  Priority = -3,\r\n}\r\n\r\nexport const TODO_DEFAULT_LIST_GROUP_VALUES = Object.values(\r\n  TodoDefaultListGroup\r\n).filter(Number.isInteger);\r\n","import { format, isToday, isYesterday } from \"date-fns\";\r\nimport { makeAutoObservable } from \"mobx\";\r\n\r\nimport { NoteType } from \"enums/notes\";\r\nimport { Note } from \"types/notes\";\r\nimport NoteModel from \"models/note/NoteModel\";\r\n\r\nimport { i18n, pageView } from \"..\";\r\n\r\nclass NotesStore {\r\n  public rawItems: Note[] = [];\r\n\r\n  constructor(userId: number) {\r\n    makeAutoObservable(this);\r\n\r\n    this.init(userId);\r\n  }\r\n\r\n  private async init(userId: number) {\r\n    await this.loadItems(userId);\r\n\r\n    if (this.todayItem) {\r\n      return;\r\n    }\r\n\r\n    this.addNote({ userId, title: null, type: NoteType.time });\r\n  }\r\n\r\n  public get items(): Note[] {\r\n    return this.rawItems.map((item) => {\r\n      const { type, dateCreated } = item;\r\n\r\n      switch (type) {\r\n        case NoteType.base:\r\n          return item;\r\n\r\n        case NoteType.time:\r\n          const title = isToday(dateCreated)\r\n            ? i18n.t(\"Today\")\r\n            : isYesterday(dateCreated)\r\n            ? i18n.t(\"Yesterday\")\r\n            : format(dateCreated, \"dd.MM.yyyy\", pageView.formatOptions);\r\n\r\n          return { ...item, title };\r\n\r\n        default:\r\n          return item;\r\n      }\r\n    });\r\n  }\r\n\r\n  public get sortedItems() {\r\n    return [...this.items]\r\n      .filter(({ type }) => type !== NoteType.time)\r\n      .sort((a, b) => (!a.priority && b.priority ? 1 : -1));\r\n  }\r\n\r\n  public get timeItems() {\r\n    return [...this.items]\r\n      .filter(({ type }) => type === NoteType.time)\r\n      .map(({ id, title, ...additional }) => ({\r\n        value: id,\r\n        label: title,\r\n        additional,\r\n      }));\r\n  }\r\n\r\n  public get todayItem(): Note | null {\r\n    const item = this.rawItems.find(\r\n      ({ dateCreated, type }) => isToday(dateCreated) && type === NoteType.time\r\n    );\r\n\r\n    return item || null;\r\n  }\r\n\r\n  public get notesMap(): Record<number, Note> {\r\n    return this.items.reduce(\r\n      (acc, item) => Object.assign(acc, { [item.id]: item }),\r\n      {}\r\n    );\r\n  }\r\n\r\n  public async loadItems(userId: number) {\r\n    this.rawItems = await NoteModel.selectAllByUserId(userId);\r\n  }\r\n\r\n  public async addNote(\r\n    note: Pick<Note, \"title\" | \"userId\" | \"type\">\r\n  ) {\r\n    const addedNote = await NoteModel.add(note);\r\n\r\n    if (addedNote) {\r\n      this.rawItems.push(addedNote);\r\n    }\r\n\r\n    return addedNote;\r\n  }\r\n\r\n  public async updateNote(\r\n    noteId: number,\r\n    note: Partial<Omit<Note, \"id\" | \"userId\" | \"dateCreated\">>\r\n  ) {\r\n    const item = await NoteModel.update(\r\n      noteId,\r\n      Object.assign(this.notesMap[noteId], note)\r\n    );\r\n\r\n    if (item) {\r\n      const index = this.rawItems.findIndex(({ id }) => id === noteId);\r\n\r\n      this.rawItems[index] = item;\r\n    }\r\n  }\r\n\r\n  public async deleteNote(noteId: number) {\r\n    const isDeleted = await NoteModel.delete(noteId);\r\n\r\n    if (isDeleted) {\r\n      this.rawItems = this.rawItems.filter(({ id }) => id !== noteId);\r\n    }\r\n  }\r\n\r\n  public async changePriority(noteId: number) {\r\n    this.updateNote(noteId, { priority: !this.notesMap[noteId].priority });\r\n  }\r\n}\r\n\r\nexport default NotesStore;\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\nclass PasswordStore {\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n}\r\n\r\nexport default PasswordStore;\r\n","import { TodoItem } from \"types/todo-list\";\r\n\r\nimport { mapSqlResultToArray } from \"helpers/mappers\";\r\n\r\nimport { modelInitRunner, sqlQuery } from \"..\";\r\n\r\nclass TodoItemModel {\r\n  public static MODEL_NAME = \"todo_item_model\";\r\n\r\n  public static init() {\r\n    return sqlQuery(\r\n      `CREATE TABLE ${this.MODEL_NAME} (\r\n          id INTEGER PRIMARY KEY, \r\n          title TEXT, \r\n          description TEXT, \r\n          state INTEGER,\r\n          type INTEGER,\r\n          groupId INTEGER, \r\n          userId INTEGER, \r\n          orderIndex INTEGER, \r\n          steps TEXT, \r\n          dateCreate REAL, \r\n          priority BOOL, \r\n          lastChanged REAL\r\n        )`\r\n    );\r\n  }\r\n\r\n  public static async add({\r\n    title,\r\n    description,\r\n    state,\r\n    type,\r\n    groupId,\r\n    userId,\r\n    steps,\r\n    orderIndex,\r\n  }: Omit<TodoItem, \"id\" | \"lastChanged\" | \"dateCreate\" | \"priority\">) {\r\n    const { result } = await sqlQuery(\r\n      `INSERT INTO ${this.MODEL_NAME} (title, description, state, type, groupId, userId, orderIndex, steps, dateCreate, priority) values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`,\r\n      [\r\n        title,\r\n        description,\r\n        state,\r\n        type,\r\n        groupId,\r\n        userId,\r\n        orderIndex,\r\n        JSON.stringify(steps),\r\n        new Date().getTime(),\r\n        false,\r\n      ]\r\n    );\r\n\r\n    if (result.insertId) {\r\n      return TodoItemModel.selectById(result.insertId);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public static async selectById(itemId: number) {\r\n    const { result } = await sqlQuery(\r\n      `SELECT * FROM ${this.MODEL_NAME} WHERE id = ?`,\r\n      [itemId]\r\n    );\r\n\r\n    if (!result.rows.length) {\r\n      return null;\r\n    }\r\n\r\n    const { steps, priority, ...rest } = result.rows.item(0);\r\n\r\n    return { steps: JSON.parse(steps), priority: priority === \"true\", ...rest };\r\n  }\r\n\r\n  public static async selectAllForUserId(userId: number): Promise<TodoItem[]> {\r\n    const { result } = await sqlQuery(\r\n      `SELECT * FROM ${this.MODEL_NAME} WHERE userId = ?`,\r\n      [userId]\r\n    );\r\n\r\n    return mapSqlResultToArray(result).map(\r\n      ({ steps = \"[]\", priority, ...rest }) => ({\r\n        steps: JSON.parse(steps),\r\n        priority: priority === \"true\",\r\n        ...rest,\r\n      })\r\n    );\r\n  }\r\n\r\n  public static async update({\r\n    id,\r\n    steps,\r\n    title,\r\n    description,\r\n    state,\r\n    type,\r\n    groupId,\r\n    userId,\r\n    orderIndex,\r\n    priority,\r\n  }: TodoItem) {\r\n    const { result } = await sqlQuery(\r\n      `UPDATE ${this.MODEL_NAME} SET title = ?, description = ?, state = ?, type = ?, groupId = ?, userId = ?, orderIndex = ?, steps = ?, priority = ?, lastChanged = ? WHERE id = ?`,\r\n      [\r\n        title,\r\n        description,\r\n        state,\r\n        type,\r\n        groupId,\r\n        userId,\r\n        orderIndex,\r\n        JSON.stringify(steps),\r\n        priority,\r\n        new Date().getTime(),\r\n        id,\r\n      ]\r\n    );\r\n\r\n    if (result.rowsAffected === 1) {\r\n      return TodoItemModel.selectById(id);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public static async removeByGroupId(groupId: number): Promise<boolean> {\r\n    await sqlQuery(`DELETE FROM ${this.MODEL_NAME} WHERE groupId = ?`, [\r\n      groupId,\r\n    ]);\r\n\r\n    return true;\r\n  }\r\n\r\n  public static async removeById(id: number) {\r\n    const { result } = await sqlQuery(\r\n      `DELETE FROM ${this.MODEL_NAME} WHERE id = ?`,\r\n      [id]\r\n    );\r\n\r\n    return result.rowsAffected > 0;\r\n  }\r\n}\r\n\r\nmodelInitRunner(TodoItemModel);\r\n\r\nexport default TodoItemModel;\r\n","import { mapSqlResultToArray } from \"helpers/mappers\";\r\n\r\nimport { TodoGroup } from \"types/todo-list\";\r\n\r\nimport { modelInitRunner, sqlQuery } from \"..\";\r\n\r\nimport TodoItemModel from \"./TodoIteModel\";\r\n\r\nclass TodoGroupModel {\r\n  public static MODEL_NAME = \"todo_group_model\";\r\n\r\n  public static init() {\r\n    return sqlQuery(\r\n      `CREATE TABLE ${this.MODEL_NAME} (\r\n          id INTEGER PRIMARY KEY, \r\n          title TEXT,\r\n          orderIndex INTEGER,\r\n          userId INTEGER\r\n        )`\r\n    );\r\n  }\r\n\r\n  public static async getById(groupId: number) {\r\n    const { result } = await sqlQuery(\r\n      `SELECT * FROM ${this.MODEL_NAME} WHERE id = ?`,\r\n      [groupId]\r\n    );\r\n\r\n    if (result.rows.length) {\r\n      return result.rows.item(0);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public static async add({\r\n    title,\r\n    orderIndex,\r\n    userId,\r\n  }: Partial<Omit<TodoGroup, \"id\">>) {\r\n    const { result } = await sqlQuery(\r\n      `INSERT INTO ${this.MODEL_NAME} (title, orderIndex, userId) values(?, ?, ?)`,\r\n      [title, orderIndex, userId]\r\n    );\r\n\r\n    if (result.insertId) {\r\n      return await TodoGroupModel.getById(result.insertId);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public static async selectAllForUserId(userId: number): Promise<TodoGroup[]> {\r\n    const { result } = await sqlQuery(\r\n      `SELECT * FROM ${this.MODEL_NAME} WHERE userId = ?`,\r\n      [userId]\r\n    );\r\n\r\n    return mapSqlResultToArray(result);\r\n  }\r\n\r\n  public static async removeById(groupId: number): Promise<boolean> {\r\n    const { result } = await sqlQuery(\r\n      `DELETE FROM ${this.MODEL_NAME} WHERE id = ?`,\r\n      [groupId]\r\n    );\r\n\r\n    return (\r\n      result.rowsAffected === 1 &&\r\n      (await TodoItemModel.removeByGroupId(groupId))\r\n    );\r\n  }\r\n}\r\n\r\nmodelInitRunner(TodoGroupModel);\r\n\r\nexport default TodoGroupModel;\r\n","import { isToday } from \"date-fns\";\r\nimport { makeAutoObservable } from \"mobx\";\r\n\r\nimport { TodoGroup, TodoItem } from \"types/todo-list\";\r\nimport { TodoDefaultListGroup } from \"enums/todo-list\";\r\n\r\nimport TodoGroupModel from \"models/todo/TodoGroupModel\";\r\nimport TodoItemModel from \"models/todo/TodoIteModel\";\r\n\r\ninterface ItemsMap {\r\n  [key: string | number]: TodoItem[];\r\n}\r\n\r\nclass TodoListStore {\r\n  public groups: TodoGroup[] = [];\r\n  public items: TodoItem[] = [];\r\n\r\n  constructor(userId: number) {\r\n    makeAutoObservable(this);\r\n\r\n    this.loadData(userId);\r\n  }\r\n\r\n  public get todoMap(): Record<number, TodoItem> {\r\n    return this.items.reduce(\r\n      (acc, item) => Object.assign(acc, { [item.id]: item }),\r\n      {}\r\n    );\r\n  }\r\n\r\n  public get itemsMapForGroups(): ItemsMap {\r\n    const itemsGroupMap = this.items.reduce(\r\n      (acc, item) =>\r\n        Object.assign(acc, {\r\n          [item.groupId]: (acc[item.groupId] || []).concat(item),\r\n        }),\r\n      {} as ItemsMap\r\n    );\r\n\r\n    return {\r\n      ...itemsGroupMap,\r\n      [TodoDefaultListGroup.All]: this.items,\r\n      [TodoDefaultListGroup.Priority]: this.items.filter(\r\n        ({ priority }) => priority\r\n      ),\r\n      [TodoDefaultListGroup.Today]: this.items.filter(({ dateCreate }) =>\r\n        isToday(dateCreate)\r\n      ),\r\n    };\r\n  }\r\n\r\n  public countItemsInGroup(groupId: number | TodoDefaultListGroup) {\r\n    return this.itemsMapForGroups[groupId]?.length || 0;\r\n  }\r\n\r\n  public async loadData(userId: number) {\r\n    this.groups = await TodoGroupModel.selectAllForUserId(userId);\r\n    this.items = await TodoItemModel.selectAllForUserId(userId);\r\n  }\r\n\r\n  public async addGroup(group: Partial<Omit<TodoGroup, \"id\">>) {\r\n    const addedGroup = await TodoGroupModel.add(group);\r\n\r\n    this.groups.push(addedGroup);\r\n  }\r\n\r\n  public async removeGroup(groupId: number) {\r\n    const removeSuccess = await TodoGroupModel.removeById(groupId);\r\n\r\n    if (removeSuccess) {\r\n      this.groups = this.groups.filter(({ id }) => id !== groupId);\r\n      this.items = this.items.filter(\r\n        ({ groupId: _groupId }) => _groupId !== groupId\r\n      );\r\n    }\r\n  }\r\n\r\n  public async removeItem(itemId: number) {\r\n    const removeSuccess = await TodoItemModel.removeById(itemId);\r\n\r\n    if (removeSuccess) {\r\n      this.items = this.items.filter(({ id }) => id !== itemId);\r\n    }\r\n  }\r\n\r\n  public async addItem(\r\n    item: Omit<TodoItem, \"id\" | \"lastChanged\" | \"dateCreate\" | \"priority\">\r\n  ) {\r\n    const addedItem = await TodoItemModel.add(item);\r\n\r\n    this.items.push(addedItem);\r\n\r\n    return addedItem;\r\n  }\r\n\r\n  public async updateItem(id: number, value: Partial<TodoItem>) {\r\n    const index = this.items.findIndex(({ id: _id }) => _id === id)!;\r\n    const updatedItem = await TodoItemModel.update({\r\n      ...this.items[index],\r\n      ...value,\r\n    });\r\n\r\n    this.items[index] = updatedItem;\r\n  }\r\n}\r\n\r\nexport default TodoListStore;\r\n","import { ru, enUS } from \"date-fns/locale\";\r\nimport { makeAutoObservable } from \"mobx\";\r\n\r\nimport { Language, Theme } from \"enums/page-view\";\r\n\r\nimport { DEFAULT_USER_ID } from \"../user/constants\";\r\n\r\nclass PageViewStore {\r\n  public expandedSideBar = false;\r\n  public language = Language.Ru;\r\n  public theme = Theme.Dark;\r\n  public currentUserId = DEFAULT_USER_ID;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    const savedSettingsJson = localStorage.getItem(\"page-settings\");\r\n\r\n    window.addEventListener(\"unload\", () => {\r\n      localStorage.setItem(\"page-settings\", JSON.stringify(this));\r\n    });\r\n\r\n    if (savedSettingsJson === null) {\r\n      return;\r\n    }\r\n\r\n    const savedSettings = JSON.parse(savedSettingsJson);\r\n\r\n    for (const key in savedSettings) {\r\n      if (key in this) {\r\n        (this as any)[key] = savedSettings[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  public get isDarkTheme() {\r\n    return this.theme === Theme.Dark;\r\n  }\r\n\r\n  public get smallLanguage(): string {\r\n    return this.language.split(\"_\")[0];\r\n  }\r\n\r\n  public get formatOptions() {\r\n    return {\r\n      locale: this.language === Language.Ru ? ru : enUS,\r\n    };\r\n  }\r\n\r\n  public toggleExpanded = () => {\r\n    this.expandedSideBar = !this.expandedSideBar;\r\n  };\r\n\r\n  public changeTheme = (newTheme: Theme) => {\r\n    this.theme = newTheme;\r\n  };\r\n\r\n  public changeLanguage = (lang: Language) => {\r\n    this.language = lang;\r\n  };\r\n}\r\n\r\nexport default PageViewStore;\r\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport { reaction } from \"mobx\";\r\n\r\nimport { Language } from \"enums/page-view\";\r\n\r\nimport UserModel from \"models/user/UserModel\";\r\n\r\nimport UserStore from \"./user\";\r\nimport NotesStore from \"./notes\";\r\nimport PasswordStore from \"./passwords\";\r\nimport TodoListStore from \"./todo-list\";\r\nimport PageViewStore from \"./page-view\";\r\n\r\nimport ru from \"glossary/ru.json\";\r\nimport enUS from \"glossary/enUS.json\";\r\n\r\nexport const pageView = new PageViewStore();\r\nexport const user = new UserStore();\r\nexport const notes = new NotesStore(pageView.currentUserId);\r\nexport const passwords = new PasswordStore();\r\nexport const todoList = new TodoListStore(pageView.currentUserId);\r\n\r\ni18n.use(initReactI18next).init({\r\n  resources: {\r\n    [Language.EnUS]: {\r\n      translation: enUS,\r\n    },\r\n    [Language.Ru]: {\r\n      translation: ru,\r\n    },\r\n  },\r\n  lng: pageView.language,\r\n  fallbackLng: Language.EnUS,\r\n  interpolation: {\r\n    escapeValue: false,\r\n  },\r\n});\r\n\r\nreaction(\r\n  () => pageView.currentUserId,\r\n  async (userId) => {\r\n    const loadedUser = await UserModel.selectUserById(userId);\r\n\r\n    todoList.loadData(userId);\r\n\r\n    user.data = loadedUser;\r\n  }\r\n);\r\n\r\nreaction(\r\n  () => pageView.language,\r\n  (lang) => i18n.changeLanguage(lang)\r\n);\r\n\r\nexport { i18n };\r\n","export interface TodoGroup {\r\n  id: number;\r\n  title: string;\r\n  orderIndex: number;\r\n  userId: number;\r\n}\r\n\r\nexport enum TodoState {\r\n  InProgress,\r\n  Done,\r\n}\r\n\r\nexport interface TodoStep {\r\n  id: number;\r\n  title: string;\r\n  priority: boolean;\r\n  state: TodoState;\r\n}\r\n\r\nexport interface TodoItem {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  state: TodoState;\r\n  type: number; // ???\r\n  groupId: number;\r\n  userId: number;\r\n  orderIndex: number | null;\r\n  steps: TodoStep[];\r\n  dateCreate: number;\r\n  priority: boolean;\r\n  lastChanged: number | null;\r\n}\r\n","import { useTranslation } from \"react-i18next\";\r\n\r\nconst Error404 = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className=\"p-10\">\r\n      <h2>{t(\"Error\")} 404!</h2>\r\n      <h5>{t(\"Page not found\")}!</h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error404;\r\n","import { FC, ReactNode } from \"react\";\r\nimport { Content, FlexboxGrid } from \"rsuite\";\r\n\r\ninterface PageContentProps {\r\n  navigation?: ReactNode;\r\n  children: ReactNode;\r\n}\r\n\r\nconst PageContent: FC<PageContentProps> = ({ navigation, children }) => (\r\n  <Content>\r\n    {navigation ? (\r\n      <FlexboxGrid className=\"full-height\">\r\n        <FlexboxGrid.Item className=\"full-height b-right\" colspan={4}>\r\n          {navigation}\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={20} className=\"full-height\">{children}</FlexboxGrid.Item>\r\n      </FlexboxGrid>\r\n    ) : (\r\n      children\r\n    )}\r\n  </Content>\r\n);\r\n\r\nexport default PageContent;\r\n","import { ContextMenuItemHandler } from \"./types\";\r\n\r\nexport const handlerBuilder =\r\n  (handler: ContextMenuItemHandler) =>\r\n  (\r\n    event: React.TouchEvent<HTMLDivElement> | React.MouseEvent<HTMLDivElement>,\r\n    data: Object,\r\n    target: HTMLElement\r\n  ) =>\r\n    handler(target.parentElement?.dataset?.uid as string, event, data, target);\r\n","import { FC } from \"react\";\r\nimport { Dropdown } from \"rsuite\";\r\nimport { ContextMenu as ContextMenuLib, MenuItem } from \"react-contextmenu\";\r\n\r\nimport { ContextMenuItem } from \"./types\";\r\nimport { handlerBuilder } from \"./utils\";\r\n\r\ninterface ContextMenuProps {\r\n  items: ContextMenuItem[];\r\n  id: string;\r\n}\r\n\r\nconst ContextMenu: FC<ContextMenuProps> = ({ id, items }) => (\r\n  <ContextMenuLib id={id}>\r\n    <Dropdown.Menu>\r\n      {items.map(({ handler, label, icon, className }, index) => (\r\n        <MenuItem onClick={handlerBuilder(handler)} key={index}>\r\n          <Dropdown.Item icon={icon} className={className}>\r\n            {label}\r\n          </Dropdown.Item>\r\n        </MenuItem>\r\n      ))}\r\n    </Dropdown.Menu>\r\n  </ContextMenuLib>\r\n);\r\n\r\nexport default ContextMenu;\r\n","import { List } from \"rsuite\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  max-height: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const ListTitle = styled.div`\r\n  height: 56px;\r\n  padding: 10px;\r\n  border-bottom: 1px solid var(--rs-divider-border);\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const TodoListElement = styled(List)`\r\n  box-shadow: none;\r\n  height: 100%;\r\n\r\n  &[data-added=\"true\"][data-title=\"true\"] {\r\n    height: calc(100% - 112px);\r\n  }\r\n\r\n  &[data-added=\"true\"],\r\n  &[data-title=\"true\"] {\r\n    height: calc(100% - 56px);\r\n  }\r\n`;\r\n\r\nconst LIST_ITEM_STYLE = css`\r\n  border-radius: 4px;\r\n  background: var(--ym-list-bg);\r\n\r\n  & svg {\r\n    display: flex;\r\n    height: 16px;\r\n    width: auto;\r\n  }\r\n\r\n  &:hover {\r\n    background: var(--ym-list-bg-hover);\r\n  }\r\n`;\r\n\r\nexport const ListItem = styled(List.Item)`\r\n  ${LIST_ITEM_STYLE}\r\n  box-shadow: none;\r\n  cursor: pointer;\r\n  padding: 0px;\r\n\r\n  & > div {\r\n    padding: 10px 14px;\r\n  }\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  & > div .content {\r\n    font-size: 15px;\r\n    word-break: break-all;\r\n  }\r\n\r\n  &[data-active=\"true\"] {\r\n    background: var(--ym-list-bg-active);\r\n    color: var(--rs-primary-700);\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nexport const AddItemContainer = styled.div`\r\n  ${LIST_ITEM_STYLE}\r\n  margin-top: 8px;\r\n  cursor: text;\r\n  padding: 10px 14px;\r\n\r\n  & p {\r\n    font-size: 14px;\r\n    margin: 3px 0px;\r\n    display: inline-block;\r\n    padding-left: 12px;\r\n  }\r\n\r\n  & input {\r\n    background: transparent;\r\n  }\r\n\r\n  & input,\r\n  input:focus {\r\n    border: none;\r\n    box-shadow: none;\r\n  }\r\n\r\n  & > div > div:first-child {\r\n    width: 20px;\r\n    text-align: center;\r\n  }\r\n\r\n  & > div > div:last-child {\r\n    width: calc(100% - 20px);\r\n  }\r\n`;\r\n\r\nexport const ItemIcon = styled.div`\r\n  width: 30px;\r\n`;\r\n\r\nexport const ItemContent = styled.div`\r\n  width: calc(100% - 30px);\r\n`;\r\n","import { FC, useCallback, useState } from \"react\";\r\nimport { FlexboxGrid, Input } from \"rsuite\";\r\n\r\nimport { AddItemContainer } from \"./styles\";\r\n\r\nimport PlusIcon from \"@rsuite/icons/Plus\";\r\nimport AddOutlineIcon from \"@rsuite/icons/AddOutline\";\r\n\r\ninterface AddListItemProps {\r\n  onAddItem: (title: string) => boolean;\r\n  placeholder?: string;\r\n}\r\n\r\nconst AddListItem: FC<AddListItemProps> = ({\r\n  onAddItem,\r\n  placeholder = \"Add task\",\r\n}) => {\r\n  const [focused, setFocused] = useState(false);\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const onRemoveFocused = useCallback(() => setFocused(false), [setFocused]);\r\n\r\n  const onPressEnterHandler = useCallback(\r\n    (event) => {\r\n      if (onAddItem(value)) {\r\n        setValue(\"\");\r\n      }\r\n    },\r\n    [onAddItem, value]\r\n  );\r\n\r\n  const isShowInput = Boolean(value || focused);\r\n\r\n  return (\r\n    <AddItemContainer\r\n      onClick={() => setFocused(true)}\r\n      data-focused={focused}\r\n      className=\"add-control\"\r\n    >\r\n      <FlexboxGrid align=\"middle\" justify=\"space-between\">\r\n        <FlexboxGrid.Item>\r\n          {isShowInput ? <AddOutlineIcon /> : <PlusIcon />}\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item>\r\n          {isShowInput ? (\r\n            <Input\r\n              size=\"sm\"\r\n              autoFocus\r\n              value={value}\r\n              onChange={(value) => setValue(value as string)}\r\n              onPressEnter={onPressEnterHandler}\r\n              placeholder=\"Typing todo title...\"\r\n              onBlur={onRemoveFocused}\r\n            />\r\n          ) : (\r\n            <p>{placeholder}</p>\r\n          )}\r\n        </FlexboxGrid.Item>\r\n      </FlexboxGrid>\r\n    </AddItemContainer>\r\n  );\r\n};\r\n\r\nexport default AddListItem;\r\n","import React, { FC } from \"react\";\r\nimport { ListProps } from \"rsuite\";\r\n\r\nimport AddListItem from \"./AddListItem\";\r\nimport { Container, TodoListElement, ListTitle } from \"./styles\";\r\n\r\ninterface TodoListProps extends ListProps {\r\n  children: React.ReactNode;\r\n  onAddItem?: (title: string) => boolean;\r\n  addPlaceholder?: string;\r\n  title?: React.ReactNode;\r\n  emptyPlaceholder?: React.ReactNode;\r\n  empty?: boolean;\r\n}\r\n\r\nconst TodoList: FC<TodoListProps> = ({\r\n  children,\r\n  onAddItem,\r\n  addPlaceholder,\r\n  title,\r\n  emptyPlaceholder = \"List is empty\",\r\n  empty = false,\r\n  ...restProps\r\n}) => (\r\n  <Container>\r\n    {title && <ListTitle>{title}</ListTitle>}\r\n    <TodoListElement\r\n      {...restProps}\r\n      data-added={Boolean(onAddItem)}\r\n      data-title={Boolean(title)}\r\n    >\r\n      {empty ? (\r\n        <h6 className=\"flex-center full-height\">{emptyPlaceholder}</h6>\r\n      ) : (\r\n        children\r\n      )}\r\n    </TodoListElement>\r\n    {onAddItem && (\r\n      <AddListItem onAddItem={onAddItem} placeholder={addPlaceholder} />\r\n    )}\r\n  </Container>\r\n);\r\n\r\nexport default TodoList;\r\n","import React, { FC } from \"react\";\r\nimport { FlexboxGrid, ListItemProps } from \"rsuite\";\r\nimport { ContextMenuTrigger } from \"react-contextmenu\";\r\n\r\nimport { ItemContent, ItemIcon, ListItem } from \"./styles\";\r\n\r\ninterface TodoListItemProps extends ListItemProps {\r\n  icon?: React.ReactNode;\r\n  postfix?: React.ReactNode;\r\n  active?: boolean;\r\n  contextMenuId?: string;\r\n  contextMenuUId?: string | number;\r\n}\r\n\r\nconst TodoListItem: FC<TodoListItemProps> = ({\r\n  children,\r\n  icon,\r\n  postfix,\r\n  active = false,\r\n  contextMenuId,\r\n  contextMenuUId,\r\n  ...restProps\r\n}) => {\r\n  const content = (\r\n    <FlexboxGrid align=\"middle\" justify=\"space-between\">\r\n      <FlexboxGrid.Item\r\n        className=\"content flex-block flex-align-center\"\r\n        colspan={22}\r\n      >\r\n        <ItemIcon>{icon}</ItemIcon>\r\n        <ItemContent>{children}</ItemContent>\r\n      </FlexboxGrid.Item>\r\n      <FlexboxGrid.Item className=\"align-right\" colspan={2}>\r\n        {postfix}\r\n      </FlexboxGrid.Item>\r\n    </FlexboxGrid>\r\n  );\r\n\r\n  return (\r\n    <ListItem {...restProps} data-active={active} data-uid={contextMenuUId}>\r\n      {contextMenuId ? (\r\n        <ContextMenuTrigger id={contextMenuId}>{content}</ContextMenuTrigger>\r\n      ) : (\r\n        <div>{content}</div>\r\n      )}\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import { Content } from \"rsuite\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { List as TodoList, ListItem as TodoListItem } from \"components/list\";\r\n\r\nexport const NavContainer = styled.div`\r\n  height: 100vh;\r\n  width: 100%;\r\n  border-right: 1px solid var(--rs-divider-border);\r\n`;\r\n\r\nexport const ListTasksContainer = styled.div`\r\n  height: calc(100vh - 145px);\r\n`;\r\n\r\nexport const TopListTasksContainer = styled.div`\r\n  height: 145px;\r\n`;\r\n\r\nexport const StyledTodoList = styled(TodoList)`\r\n  & + .add-control {\r\n    border-radius: 0;\r\n    background: transparent;\r\n    border-top: 1px solid var(--rs-divider-border);\r\n  }\r\n`;\r\n\r\nexport const CountItemsContainer = styled.div`\r\n  color: var(--rs-gray-500);\r\n  font-size: 13px;\r\n`;\r\n\r\nexport const StyledListItem = styled(TodoListItem)`\r\n  background: transparent;\r\n  margin: 5px;\r\n\r\n  svg {\r\n    height: 16px;\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nexport const StyledContent = styled(Content)`\r\n  height: 100vh;\r\n  padding: 20px 30px;\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  input {\r\n    color: var(--rs-sidenav-subtle-selected-text) !important;\r\n  }\r\n`;\r\n\r\nexport const ListContainer = styled.div`\r\n  border-radius: 20px;\r\n  margin-top: 20px;\r\n  height: calc(100vh - 100px);\r\n`;\r\n\r\nexport const StepsState = styled.div`\r\n  font-size: 10px;\r\n  color: var(--rs-btn-subtle-text);\r\n`;\r\n","import { FC } from \"react\";\r\n\r\ninterface StarProps extends React.SVGProps<SVGSVGElement> {\r\n  filled?: boolean;\r\n}\r\n\r\nconst Star: FC<StarProps> = ({ filled, ...restProps }) => (\r\n  <svg\r\n    stroke=\"currentColor\"\r\n    fill=\"currentColor\"\r\n    strokeWidth=\"0\"\r\n    viewBox=\"0 0 24 24\"\r\n    height=\"1em\"\r\n    width=\"1em\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    {...restProps}\r\n  >\r\n    <g>\r\n      <path fill=\"none\" d=\"M0 0h24v24H0z\"></path>\r\n      {filled ? (\r\n        <path d=\"M12 17l-5.878 3.59 1.598-6.7-5.23-4.48 6.865-.55L12 2.5l2.645 6.36 6.866.55-5.231 4.48 1.598 6.7z\"></path>\r\n      ) : (\r\n        <path d=\"M12 18.26l-7.053 3.948 1.575-7.928L.587 8.792l8.027-.952L12 .5l3.386 7.34 8.027.952-5.935 5.488 1.575 7.928L12 18.26zm0-2.292l4.247 2.377-.949-4.773 3.573-3.305-4.833-.573L12 5.275l-2.038 4.42-4.833.572 3.573 3.305-.949 4.773L12 15.968z\"></path>\r\n      )}\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nexport default Star;\r\n","import { FC, useCallback, useMemo } from \"react\";\r\nimport { Divider } from \"rsuite\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { todoList, user } from \"store\";\r\n\r\nimport { TodoDefaultListGroup } from \"enums/todo-list\";\r\n\r\nimport ContextMenu from \"components/context-menu\";\r\n\r\nimport {\r\n  NavContainer,\r\n  ListTasksContainer,\r\n  TopListTasksContainer,\r\n  StyledTodoList,\r\n  CountItemsContainer,\r\n  StyledListItem,\r\n} from \"./styles\";\r\n\r\nimport Star from \"icons/Star\";\r\nimport TimeIcon from \"@rsuite/icons/Time\";\r\nimport TrashIcon from \"@rsuite/icons/Trash\";\r\nimport AttachmentIcon from \"@rsuite/icons/Attachment\";\r\nimport ListIcon from \"@rsuite/icons/List\";\r\n\r\ninterface TodoGroupControlProps {\r\n  activeKey: string | number;\r\n  changeActiveGroup: (activeGroupId: number | TodoDefaultListGroup) => void;\r\n}\r\n\r\nconst TodoGroupControl: FC<TodoGroupControlProps> = ({\r\n  activeKey,\r\n  changeActiveGroup,\r\n}) => {\r\n  const { groups } = todoList;\r\n  const { t } = useTranslation();\r\n\r\n  const onAddGroup = useCallback(\r\n    (title: string) => {\r\n      todoList.addGroup({\r\n        title,\r\n        orderIndex: groups.length + 1,\r\n        userId: user.userId,\r\n      });\r\n\r\n      return true;\r\n    },\r\n    [groups]\r\n  );\r\n\r\n  const onDeleteGroup = useCallback((groupId) => {\r\n    todoList.removeGroup(Number(groupId));\r\n  }, []);\r\n\r\n  const contextMenuItems = useMemo(\r\n    () => [\r\n      {\r\n        label: t(\"Delete group\"),\r\n        handler: onDeleteGroup,\r\n        className: \"delete-button\",\r\n        icon: <TrashIcon />,\r\n      },\r\n    ],\r\n    [onDeleteGroup, t]\r\n  );\r\n\r\n  return (\r\n    <NavContainer>\r\n      <ContextMenu id=\"group-context\" items={contextMenuItems} />\r\n      <TopListTasksContainer>\r\n        <StyledTodoList>\r\n          <StyledListItem\r\n            icon={<ListIcon />}\r\n            postfix={\r\n              <CountItemsContainer>\r\n                {todoList.countItemsInGroup(TodoDefaultListGroup.All) || \"\"}\r\n              </CountItemsContainer>\r\n            }\r\n            active={TodoDefaultListGroup.All === activeKey}\r\n            onClick={() => changeActiveGroup(TodoDefaultListGroup.All)}\r\n          >\r\n            {t(\"All\")}\r\n          </StyledListItem>\r\n\r\n          <StyledListItem\r\n            icon={<TimeIcon />}\r\n            postfix={\r\n              <CountItemsContainer>\r\n                {todoList.countItemsInGroup(TodoDefaultListGroup.Today) || \"\"}\r\n              </CountItemsContainer>\r\n            }\r\n            active={TodoDefaultListGroup.Today === activeKey}\r\n            onClick={() => changeActiveGroup(TodoDefaultListGroup.Today)}\r\n          >\r\n            {t(\"Today\")}\r\n          </StyledListItem>\r\n\r\n          <StyledListItem\r\n            icon={<Star />}\r\n            postfix={\r\n              <CountItemsContainer>\r\n                {todoList.countItemsInGroup(TodoDefaultListGroup.Priority) ||\r\n                  \"\"}\r\n              </CountItemsContainer>\r\n            }\r\n            active={TodoDefaultListGroup.Priority === activeKey}\r\n            onClick={() => changeActiveGroup(TodoDefaultListGroup.Priority)}\r\n          >\r\n            {t(\"Priority\")}\r\n          </StyledListItem>\r\n        </StyledTodoList>\r\n      </TopListTasksContainer>\r\n\r\n      <Divider className=\"reset-margin\" />\r\n\r\n      <ListTasksContainer>\r\n        <StyledTodoList\r\n          onAddItem={onAddGroup}\r\n          addPlaceholder={t(\"Add task group\")}\r\n          emptyPlaceholder={`${t(\"No task groups\")} [+]`}\r\n          empty={!groups.length}\r\n        >\r\n          {groups.map(({ id, title }) => (\r\n            <StyledListItem\r\n              contextMenuId=\"group-context\"\r\n              contextMenuUId={id}\r\n              icon={<AttachmentIcon />}\r\n              active={activeKey === id}\r\n              key={id}\r\n              postfix={\r\n                <CountItemsContainer>\r\n                  {todoList.countItemsInGroup(id) || \"\"}\r\n                </CountItemsContainer>\r\n              }\r\n              onClick={() => changeActiveGroup(id)}\r\n            >\r\n              {title}\r\n            </StyledListItem>\r\n          ))}\r\n        </StyledTodoList>\r\n      </ListTasksContainer>\r\n    </NavContainer>\r\n  );\r\n};\r\n\r\nexport default observer(TodoGroupControl);\r\n","import { FC, useCallback, useEffect, useState } from \"react\";\r\nimport { Input, InputProps } from \"rsuite\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.span`\r\n  input,\r\n  input:focus {\r\n    padding: 0;\r\n    box-shadow: none;\r\n    border: none;\r\n    background: transparent;\r\n    font-size: inherit;\r\n  }\r\n`;\r\n\r\ninterface EditableTitleProps extends InputProps {\r\n  onSave: (title: string) => void;\r\n  children: string;\r\n}\r\n\r\nconst EditableTitle: FC<EditableTitleProps> = ({\r\n  children,\r\n  onSave,\r\n  ...restProps\r\n}) => {\r\n  const [value, setValue] = useState(children);\r\n\r\n  const onSaveHandler = useCallback(() => onSave(value), [onSave, value]);\r\n\r\n  useEffect(() => {\r\n    setValue(children);\r\n  }, [children]);\r\n\r\n  return (\r\n    <Container className=\"full-width\">\r\n      <Input\r\n        {...restProps}\r\n        value={value}\r\n        onChange={(val) => setValue(val as string)}\r\n        onBlur={onSaveHandler}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EditableTitle;\r\n","import { FC } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { TodoState } from \"types/todo-list\";\r\n\r\nconst StyledSvg = styled.svg`\r\n  & .success {\r\n    visibility: hidden;\r\n  }\r\n\r\n  &[data-hovered=\"true\"]:hover .success,\r\n  &[data-show=\"true\"] .success {\r\n    visibility: visible;\r\n  }\r\n`;\r\n\r\nconst Container = styled.span`\r\n  display: flex;\r\n\r\n  & > svg {\r\n    min-height: 20px;\r\n    width: auto;\r\n    display: none;\r\n  }\r\n\r\n  .empty {\r\n    display: flex;\r\n  }\r\n\r\n  &:hover .empty {\r\n    display: none;\r\n  }\r\n\r\n  &:hover .success {\r\n    display: flex;\r\n  }\r\n\r\n  &[data-done=\"true\"] {\r\n    .empty,\r\n    .success {\r\n      display: none;\r\n    }\r\n\r\n    .filled-success {\r\n      display: flex;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface TodoIconProps {\r\n  state?: TodoState;\r\n  hovered?: boolean;\r\n}\r\n\r\nconst Empty = () => (\r\n  <StyledSvg\r\n    stroke=\"currentColor\"\r\n    fill=\"currentColor\"\r\n    strokeWidth=\"0\"\r\n    viewBox=\"0 0 24 24\"\r\n    height=\"1em\"\r\n    width=\"1em\"\r\n    className=\"empty\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"></path>\r\n  </StyledSvg>\r\n);\r\n\r\nconst Success = () => (\r\n  <StyledSvg\r\n    stroke=\"currentColor\"\r\n    fill=\"currentColor\"\r\n    strokeWidth=\"0\"\r\n    viewBox=\"0 0 24 24\"\r\n    height=\"1em\"\r\n    width=\"1em\"\r\n    className=\"success\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm4.59-12.42L10 14.17l-2.59-2.58L6 13l4 4 8-8z\"></path>\r\n  </StyledSvg>\r\n);\r\n\r\nconst FilledSuccess = () => (\r\n  <StyledSvg\r\n    stroke=\"currentColor\"\r\n    fill=\"currentColor\"\r\n    strokeWidth=\"0\"\r\n    viewBox=\"0 0 24 24\"\r\n    height=\"1em\"\r\n    width=\"1em\"\r\n    className=\"filled-success\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"></path>\r\n  </StyledSvg>\r\n);\r\n\r\nconst TodoIcon: FC<TodoIconProps> = ({\r\n  state = TodoState.InProgress,\r\n  hovered,\r\n}) => {\r\n  return (\r\n    <Container data-done={state === TodoState.Done} data-hovered={hovered}>\r\n      <Empty />\r\n      <Success />\r\n      <FilledSuccess />\r\n    </Container>\r\n  );\r\n};\r\nexport default TodoIcon;\r\n","import { TodoDefaultListGroup } from \"enums/todo-list\";\r\n\r\nexport enum ItemsFilter {\r\n  All,\r\n  Done,\r\n  InProgress,\r\n}\r\n\r\nexport interface TodoListFilter {\r\n  group: string | number | TodoDefaultListGroup;\r\n  filter: ItemsFilter;\r\n}\r\n","export enum SearchGroup {\r\n  Todo,\r\n  Notes,\r\n  Passwords,\r\n}\r\n\r\nexport interface SearchFilter {\r\n  query: string;\r\n  groups: SearchGroup[];\r\n}\r\n\r\nexport type UseSearchChange = (value: Partial<SearchFilter>) => void;\r\n\r\nexport type UseSearchResult = [SearchFilter, UseSearchChange];\r\n","import { FC, useEffect, useRef } from \"react\";\r\nimport { Input, InputProps } from \"rsuite\";\r\nimport autosize from \"autosize\";\r\n\r\ninterface TextareaProps extends InputProps {}\r\n\r\nconst Textarea: FC<TextareaProps> = ({ style, ...props }) => {\r\n  const ref = useRef<any>(null);\r\n\r\n  useEffect(() => {\r\n    autosize(ref.current);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    autosize.update(ref.current);\r\n  }, [props.value]);\r\n\r\n  return (\r\n    <Input\r\n      {...props}\r\n      as=\"textarea\"\r\n      ref={ref}\r\n      style={{ resize: \"none\", ...style }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Textarea;\r\n","import { FC, useEffect, useState } from \"react\";\r\nimport { InputProps } from \"rsuite\";\r\n\r\nimport Textarea from \"components/textarea\";\r\n\r\ninterface DescriptionTextareaProps extends InputProps {\r\n  value: string;\r\n  onEdit: (value: string) => void;\r\n}\r\n\r\nconst DescriptionTextarea: FC<DescriptionTextareaProps> = ({\r\n  value,\r\n  onEdit,\r\n  ...rest\r\n}) => {\r\n  const [currentValue, setCurrentValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    setCurrentValue(value);\r\n  }, [value]);\r\n\r\n  return (\r\n    <Textarea\r\n      value={currentValue}\r\n      onChange={(value) => setCurrentValue(value as string)}\r\n      onBlur={() => onEdit(currentValue)}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DescriptionTextarea;\r\n","import { FC, useCallback, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FlexboxGrid, IconButton } from \"rsuite\";\r\nimport { formatDistance } from \"date-fns\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport EditableTitle from \"components/editable-title\";\r\nimport TodoIcon from \"components/list/ItemIcon\";\r\nimport { List, ListItem } from \"components/list\";\r\n\r\nimport { pageView, todoList } from \"store\";\r\n\r\nimport { TodoState } from \"types/todo-list\";\r\n\r\nimport DescriptionTextarea from \"./DescriptionTextarea\";\r\n\r\nimport Star from \"icons/Star\";\r\nimport CloseIcon from \"@rsuite/icons/Close\";\r\nimport ArrowRightIcon from \"@rsuite/icons/ArrowRight\";\r\nimport TrashIcon from \"@rsuite/icons/Trash\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  border-left: 1px solid var(--rs-divider-border);\r\n`;\r\n\r\nconst ScrollContainer = styled.div`\r\n  height: calc(100vh - 56px);\r\n  overflow-y: auto;\r\n  padding: 15px;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  & h4 {\r\n    flex: auto;\r\n    font-weight: normal;\r\n    margin-left: 15px;\r\n  }\r\n\r\n  & svg {\r\n    height: 22px;\r\n    width: auto;\r\n  }\r\n\r\n  & span {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ListContainer = styled.div`\r\n  height: fit-content;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\ninterface RightSideProps {\r\n  selectedId: number;\r\n  onClose: () => void;\r\n  onChangeState: (id: number, state: TodoState) => void;\r\n}\r\n\r\nconst RightSide: FC<RightSideProps> = ({\r\n  selectedId,\r\n  onClose,\r\n  onChangeState,\r\n}) => {\r\n  const { todoMap } = todoList;\r\n\r\n  const currentItem = useMemo(\r\n    () => (selectedId ? todoMap[selectedId] : null),\r\n    [selectedId, todoMap]\r\n  );\r\n\r\n  const { title, state, priority, steps, lastChanged, description } =\r\n    currentItem!;\r\n  const { t } = useTranslation();\r\n\r\n  const onUpdateTitle = useCallback(\r\n    (title) => {\r\n      todoList.updateItem(selectedId, { title });\r\n    },\r\n    [selectedId]\r\n  );\r\n\r\n  const onAddStep = useCallback(\r\n    (title) => {\r\n      todoList.updateItem(selectedId, {\r\n        steps: steps.concat({\r\n          id: steps.length + 1,\r\n          priority: false,\r\n          title,\r\n          state: TodoState.InProgress,\r\n        }),\r\n      });\r\n\r\n      return true;\r\n    },\r\n    [selectedId, steps]\r\n  );\r\n\r\n  const onRemoveStep = useCallback(\r\n    (stepId: number) => {\r\n      todoList.updateItem(selectedId, {\r\n        steps: steps.filter(({ id }) => id !== stepId),\r\n      });\r\n    },\r\n    [selectedId, steps]\r\n  );\r\n\r\n  const onEditStepTitle = useCallback(\r\n    (stepId) => (title: string) => {\r\n      const index = steps.findIndex(({ id }) => id === stepId);\r\n      const newSteps = [...steps];\r\n\r\n      if (newSteps[index].title === title) {\r\n        return;\r\n      }\r\n\r\n      newSteps[index].title = title;\r\n\r\n      todoList.updateItem(selectedId, {\r\n        steps: newSteps,\r\n      });\r\n    },\r\n    [steps, selectedId]\r\n  );\r\n\r\n  const onEditStepState = useCallback(\r\n    (stepId) => () => {\r\n      const index = steps.findIndex(({ id }) => id === stepId);\r\n      const newSteps = [...steps];\r\n      const state =\r\n        newSteps[index].state === TodoState.Done\r\n          ? TodoState.InProgress\r\n          : TodoState.Done;\r\n\r\n      if (newSteps[index].state === state) {\r\n        return;\r\n      }\r\n\r\n      newSteps[index].state = state;\r\n\r\n      todoList.updateItem(selectedId, {\r\n        steps: newSteps,\r\n      });\r\n    },\r\n    [selectedId, steps]\r\n  );\r\n\r\n  const isDone = state === TodoState.Done;\r\n\r\n  return (\r\n    <Container>\r\n      <ScrollContainer>\r\n        <TitleContainer>\r\n          <span\r\n            className=\"hover-icon flex-block\"\r\n            onClick={() =>\r\n              onChangeState(\r\n                selectedId,\r\n                isDone ? TodoState.InProgress : TodoState.Done\r\n              )\r\n            }\r\n          >\r\n            <TodoIcon state={state} hovered />\r\n          </span>\r\n          <h4>\r\n            <EditableTitle onSave={onUpdateTitle}>{title}</EditableTitle>\r\n          </h4>\r\n          <span\r\n            className=\"hover-icon flex-block\"\r\n            onClick={() =>\r\n              todoList.updateItem(selectedId, { priority: !priority })\r\n            }\r\n          >\r\n            <Star filled={priority} />\r\n          </span>\r\n        </TitleContainer>\r\n\r\n        <ListContainer>\r\n          <List addPlaceholder={t(\"Add step\")} onAddItem={onAddStep}>\r\n            {steps.map(({ id, title, state }) => (\r\n              <ListItem\r\n                key={id}\r\n                icon={\r\n                  <span\r\n                    className=\"hover-icon\"\r\n                    title={\r\n                      state === TodoState.InProgress\r\n                        ? t(\"Mark as done\")\r\n                        : t(\"Move back to in progress\")\r\n                    }\r\n                    onClick={onEditStepState(id)}\r\n                  >\r\n                    <TodoIcon state={state} hovered />\r\n                  </span>\r\n                }\r\n                postfix={\r\n                  <span\r\n                    title={t(\"Remove step\")}\r\n                    className=\"hover-icon centered-span\"\r\n                    onClick={() => onRemoveStep(id)}\r\n                  >\r\n                    <CloseIcon className=\"icon-14\" />\r\n                  </span>\r\n                }\r\n              >\r\n                <EditableTitle onSave={onEditStepTitle(id)}>\r\n                  {title}\r\n                </EditableTitle>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </ListContainer>\r\n\r\n        <DescriptionTextarea\r\n          placeholder={t(\"Add notes\")}\r\n          onEdit={(description) =>\r\n            todoList.updateItem(selectedId, { description })\r\n          }\r\n          value={description}\r\n        />\r\n      </ScrollContainer>\r\n\r\n      <FlexboxGrid\r\n        className=\"full-width p-10 b-top\"\r\n        align=\"middle\"\r\n        justify=\"space-between\"\r\n      >\r\n        <FlexboxGrid.Item>\r\n          <IconButton\r\n            icon={<ArrowRightIcon />}\r\n            appearance=\"subtle\"\r\n            onClick={onClose}\r\n            title={t(\"Close frame\")}\r\n          />\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item className=\"align-center\">\r\n          {lastChanged\r\n            ? `${t(\"last changed\")} ${formatDistance(lastChanged!, new Date(), {\r\n                includeSeconds: true,\r\n                ...pageView.formatOptions,\r\n              })} ${t(\"ago\")}`\r\n            : t(\"Not updated\")}\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item>\r\n          <IconButton\r\n            onClick={() => {\r\n              onClose();\r\n              todoList.removeItem(selectedId);\r\n            }}\r\n            className=\"delete-button\"\r\n            icon={<TrashIcon />}\r\n            appearance=\"subtle\"\r\n            title={t(\"Delete task\")}\r\n          />\r\n        </FlexboxGrid.Item>\r\n      </FlexboxGrid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RightSide;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { FC, useCallback, useMemo, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  ButtonToolbar,\r\n  Container,\r\n  Dropdown,\r\n  FlexboxGrid,\r\n  IconButton,\r\n} from \"rsuite\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport EditableTitle from \"components/editable-title\";\r\nimport { List as TodoList, ListItem as TodoListItem } from \"components/list\";\r\nimport TodoIcon from \"components/list/ItemIcon\";\r\nimport ContextMenu from \"components/context-menu\";\r\n\r\nimport { pageView, todoList } from \"store\";\r\n\r\nimport { TodoState } from \"types/todo-list\";\r\nimport {\r\n  TodoDefaultListGroup,\r\n  TODO_DEFAULT_LIST_GROUP_VALUES,\r\n} from \"enums/todo-list\";\r\n\r\nimport { ItemsFilter, TodoListFilter } from \"../types\";\r\nimport { ChangeTodoFilterHandler } from \"../utils/useTodoListFilter\";\r\nimport RightSide from \"./RightSide\";\r\nimport { StyledContent, Title, ListContainer, StepsState } from \"./styles\";\r\n\r\nimport Star from \"icons/Star\";\r\nimport MoreIcon from \"@rsuite/icons/More\";\r\n\r\ninterface TodoListContentProps {\r\n  filter: TodoListFilter;\r\n  changeFilter: ChangeTodoFilterHandler;\r\n}\r\n\r\nconst TodoListContent: FC<TodoListContentProps> = ({\r\n  filter: { group, filter },\r\n  changeFilter,\r\n}) => {\r\n  const [selectedId, setSelectedId] = useState<number | null>(null);\r\n\r\n  const { itemsMapForGroups, groups } = todoList;\r\n  const { t } = useTranslation();\r\n\r\n  const itemsMap = useMemo(() => {\r\n    const items = itemsMapForGroups[group] || [];\r\n\r\n    return {\r\n      [ItemsFilter.Done]: items.filter(({ state }) => state === TodoState.Done),\r\n      [ItemsFilter.InProgress]: items.filter(\r\n        ({ state }) => state === TodoState.InProgress\r\n      ),\r\n      [ItemsFilter.All]: items,\r\n    };\r\n  }, [itemsMapForGroups, group]);\r\n\r\n  const onCloseRightSide = useCallback(\r\n    () => setSelectedId(null),\r\n    [setSelectedId]\r\n  );\r\n\r\n  const [center, right] = useMemo(\r\n    () => (selectedId ? [16, 8] : [24, 0]),\r\n    [selectedId]\r\n  );\r\n\r\n  const onAddItem = useCallback(\r\n    (title: string) => {\r\n      todoList\r\n        .addItem({\r\n          groupId: group as number,\r\n          description: \"\",\r\n          orderIndex: null,\r\n          state: TodoState.InProgress,\r\n          steps: [],\r\n          title,\r\n          type: 0,\r\n          userId: pageView.currentUserId,\r\n        })\r\n        .then(({ id }) => setSelectedId(id));\r\n\r\n      return true;\r\n    },\r\n    [group]\r\n  );\r\n\r\n  const onChangeState = useCallback((todoId: number, newState: TodoState) => {\r\n    todoList.updateItem(todoId, { state: newState });\r\n  }, []);\r\n\r\n  const onRemoveItem = useCallback(\r\n    (key) => {\r\n      onCloseRightSide();\r\n      todoList.removeItem(Number(key));\r\n    },\r\n    [onCloseRightSide]\r\n  );\r\n\r\n  const onChangeItemsFilter = useCallback(\r\n    (value) => () => changeFilter({ filter: value }),\r\n    [changeFilter]\r\n  );\r\n\r\n  const contextMenuItems = useMemo(\r\n    () => [\r\n      {\r\n        label: t(\"Delete task\"),\r\n        handler: onRemoveItem,\r\n        className: \"delete-button\",\r\n      },\r\n    ],\r\n    [onRemoveItem, t]\r\n  );\r\n\r\n  const onSaveTitle = useCallback((title) => console.log(title), []);\r\n\r\n  const onDeleteGroup = useCallback(() => {\r\n    onCloseRightSide();\r\n    todoList\r\n      .removeGroup(group as number)\r\n      .then(() => changeFilter({ group: TodoDefaultListGroup.All }));\r\n  }, [group, changeFilter, onCloseRightSide]);\r\n\r\n  const currentGroup = useMemo(\r\n    () => groups.find(({ id }) => id === group),\r\n    [group, groups]\r\n  );\r\n\r\n  const title = useMemo<string>(() => {\r\n    switch (group) {\r\n      case TodoDefaultListGroup.All:\r\n        return t(\"All\");\r\n      case TodoDefaultListGroup.Priority:\r\n        return t(\"Priority\");\r\n      case TodoDefaultListGroup.Today:\r\n        return t(\"Today\");\r\n\r\n      default:\r\n        return currentGroup?.title || \"\";\r\n    }\r\n  }, [currentGroup, group, t]);\r\n\r\n  const disabledRemove = useMemo(\r\n    () => TODO_DEFAULT_LIST_GROUP_VALUES.includes(group),\r\n    [group]\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <ContextMenu items={contextMenuItems} id=\"todo-list-context\" />\r\n      <FlexboxGrid>\r\n        <FlexboxGrid.Item colspan={center}>\r\n          <StyledContent>\r\n            <FlexboxGrid align=\"middle\" justify=\"space-between\">\r\n              <FlexboxGrid.Item>\r\n                <Title>\r\n                  <EditableTitle onSave={onSaveTitle} readOnly={group < 0}>\r\n                    {title}\r\n                  </EditableTitle>\r\n                </Title>\r\n              </FlexboxGrid.Item>\r\n              <FlexboxGrid.Item>\r\n                <ButtonToolbar>\r\n                  <ButtonGroup size=\"sm\">\r\n                    <Button\r\n                      active={filter === ItemsFilter.All}\r\n                      onClick={onChangeItemsFilter(ItemsFilter.All)}\r\n                      appearance=\"subtle\"\r\n                    >\r\n                      {t(\"All\")} ({itemsMap[ItemsFilter.All].length})\r\n                    </Button>\r\n                    <Button\r\n                      active={filter === ItemsFilter.Done}\r\n                      onClick={onChangeItemsFilter(ItemsFilter.Done)}\r\n                      appearance=\"subtle\"\r\n                    >\r\n                      {t(\"Done\")} ({itemsMap[ItemsFilter.Done].length})\r\n                    </Button>\r\n                    <Button\r\n                      active={filter === ItemsFilter.InProgress}\r\n                      onClick={onChangeItemsFilter(ItemsFilter.InProgress)}\r\n                      appearance=\"subtle\"\r\n                    >\r\n                      {t(\"In progress\")} (\r\n                      {itemsMap[ItemsFilter.InProgress].length})\r\n                    </Button>\r\n                  </ButtonGroup>\r\n\r\n                  <Dropdown\r\n                    placement=\"bottomEnd\"\r\n                    renderToggle={(props, ref) => (\r\n                      <IconButton\r\n                        {...props}\r\n                        ref={ref}\r\n                        icon={<MoreIcon />}\r\n                        size=\"sm\"\r\n                      />\r\n                    )}\r\n                  >\r\n                    <Dropdown.Item\r\n                      className=\"delete-button\"\r\n                      onClick={onDeleteGroup}\r\n                      disabled={disabledRemove}\r\n                    >\r\n                      {t(\"Delete group\")}\r\n                    </Dropdown.Item>\r\n                  </Dropdown>\r\n                </ButtonToolbar>\r\n              </FlexboxGrid.Item>\r\n            </FlexboxGrid>\r\n\r\n            <ListContainer>\r\n              <TodoList\r\n                onAddItem={onAddItem}\r\n                empty={!itemsMap[filter].length}\r\n                emptyPlaceholder={`${t(\"No tasks in this group\")} [+]`}\r\n                addPlaceholder={t(\"Add task\")}\r\n              >\r\n                {itemsMap[filter].map(\r\n                  ({ id, priority, title, state, steps }) => (\r\n                    <TodoListItem\r\n                      active={selectedId === id}\r\n                      onClick={() => setSelectedId(id)}\r\n                      key={id}\r\n                      contextMenuUId={id}\r\n                      contextMenuId=\"todo-list-context\"\r\n                      icon={\r\n                        <span\r\n                          onClick={(event) => {\r\n                            event.stopPropagation();\r\n\r\n                            const newValue =\r\n                              state === TodoState.InProgress\r\n                                ? TodoState.Done\r\n                                : TodoState.InProgress;\r\n\r\n                            onChangeState(id, newValue);\r\n                          }}\r\n                          className=\"hover-icon centered-span\"\r\n                          title={\r\n                            state === TodoState.InProgress\r\n                              ? t(\"Mark as done\")\r\n                              : t(\"Move back to in progress\")\r\n                          }\r\n                        >\r\n                          <TodoIcon state={state} hovered />\r\n                        </span>\r\n                      }\r\n                      postfix={\r\n                        <span\r\n                          onClick={(event) => {\r\n                            event.stopPropagation();\r\n\r\n                            todoList.updateItem(id, {\r\n                              priority: !priority,\r\n                            });\r\n                          }}\r\n                          title={t(\"Mark as important\")}\r\n                          className=\"hover-icon centered-span\"\r\n                        >\r\n                          <Star filled={priority} />\r\n                        </span>\r\n                      }\r\n                    >\r\n                      <div>{title}</div>\r\n                      {steps.length > 0 &&\r\n                        (() => {\r\n                          const completedCount = steps.filter(\r\n                            ({ state }) => state === TodoState.Done\r\n                          ).length;\r\n\r\n                          return (\r\n                            <StepsState>\r\n                              {completedCount === steps.length && (\r\n                                <span>&#10004; </span>\r\n                              )}\r\n                              {completedCount} of {steps.length}\r\n                            </StepsState>\r\n                          );\r\n                        })()}\r\n                    </TodoListItem>\r\n                  )\r\n                )}\r\n              </TodoList>\r\n            </ListContainer>\r\n          </StyledContent>\r\n        </FlexboxGrid.Item>\r\n        {selectedId && (\r\n          <FlexboxGrid.Item colspan={right}>\r\n            <RightSide\r\n              selectedId={selectedId}\r\n              onClose={onCloseRightSide}\r\n              onChangeState={onChangeState}\r\n            />\r\n          </FlexboxGrid.Item>\r\n        )}\r\n      </FlexboxGrid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default observer(TodoListContent);\r\n","import PageContent from \"components/page-content\";\r\n\r\nimport TodoGroupControl from \"../components/TodoGroupControl\";\r\nimport TodoListContent from \"../components/TodoListContent\";\r\n\r\nimport { useTodoListFilter } from \"../utils/useTodoListFilter\";\r\n\r\nconst TodoList = () => {\r\n  const { filter, onChange } = useTodoListFilter();\r\n\r\n  return (\r\n    <PageContent\r\n      navigation={\r\n        <TodoGroupControl\r\n          activeKey={filter.group}\r\n          changeActiveGroup={(group) => onChange({ group })}\r\n        />\r\n      }\r\n    >\r\n      <TodoListContent filter={filter} changeFilter={onChange} />\r\n    </PageContent>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import { parse, stringify } from \"query-string\";\r\nimport { useCallback, useMemo } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\n\r\nimport { TodoDefaultListGroup } from \"enums/todo-list\";\r\n\r\nimport { ItemsFilter, TodoListFilter } from \"../types\";\r\n\r\nexport type ChangeTodoFilterHandler = (values: Partial<TodoListFilter>) => void;\r\n\r\ninterface ReturnValue {\r\n  filter: TodoListFilter;\r\n  onChange: ChangeTodoFilterHandler;\r\n}\r\n\r\nexport const useTodoListFilter = (): ReturnValue => {\r\n  const { search } = useLocation();\r\n  const history = useHistory();\r\n\r\n  const filter = useMemo(() => {\r\n    const {\r\n      group = String(TodoDefaultListGroup.All),\r\n      filter = String(ItemsFilter.All),\r\n    } = parse(search);\r\n\r\n    return {\r\n      group: Number(group),\r\n      filter: Number(filter),\r\n    };\r\n  }, [search]);\r\n\r\n  const onChange = useCallback(\r\n    (newValue) =>\r\n      history.replace({ search: stringify({ ...filter, ...newValue }) }),\r\n    [filter, history]\r\n  );\r\n\r\n  return { filter, onChange };\r\n};\r\n","import { IAllProps } from \"@tinymce/tinymce-react\";\r\n\r\nexport const EDITOR_INIT_OPTIONS: IAllProps[\"init\"] = {\r\n  autoresize_top_margin: 50,\r\n  autoresize_on_init: true,\r\n  plugins:\r\n    \"autoresize print preview paste importcss searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount imagetools textpattern noneditable help charmap quickbars emoticons\",\r\n  menubar: \"file edit view insert format tools table help\",\r\n  toolbar:\r\n    \"undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media template link anchor codesample | ltr rtl | table\",\r\n};\r\n","import { Editor as LibEditor, IAllProps } from \"@tinymce/tinymce-react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { pageView } from \"store\";\r\n\r\nimport { EDITOR_INIT_OPTIONS } from \"./constants\";\r\n\r\nimport config from \"config.json\";\r\n\r\nconst Editor = (props: IAllProps) => {\r\n  const [reloading, setReloading] = useState(false);\r\n  const { t } = useTranslation();\r\n\r\n  const { isDarkTheme, smallLanguage, language, theme } = pageView;\r\n\r\n  useEffect(() => {\r\n    setReloading(true);\r\n\r\n    setTimeout(() => setReloading(false), 500);\r\n  }, [theme, language]);\r\n\r\n  if (reloading) {\r\n    return <div className=\"flex-center full-height\">{t(\"Loading\")} ...</div>;\r\n  }\r\n\r\n  return (\r\n    <LibEditor\r\n      {...props}\r\n      apiKey={config.tinyApiKey}\r\n      init={{\r\n        skin: isDarkTheme ? \"oxide-dark\" : undefined,\r\n        content_css: isDarkTheme ? \"dark\" : undefined,\r\n        language: smallLanguage,\r\n        ...EDITOR_INIT_OPTIONS,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(Editor);\r\n","export const LANGUAGES_LIST = [\r\n  \"javascript\",\r\n  \"typescript\",\r\n  \"html\",\r\n  \"css\",\r\n  \"cpp\",\r\n  \"dart\",\r\n  \"csharp\",\r\n  \"java\",\r\n  \"kotlin\",\r\n  \"php\",\r\n  \"python\",\r\n  \"xml\",\r\n];\r\n","import styled from \"styled-components\";\r\n\r\nexport const Header = styled.div`\r\n  height: 40px;\r\n  border-top: 1px solid var(--rs-divider-border);\r\n  border-bottom: 1px solid var(--rs-divider-border);\r\n  padding: 0px 10px;\r\n`;\r\n\r\nexport const EditorContainer = styled.div`\r\n  height: calc(100% - 40px);\r\n`;\r\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg stroke=\"currentColor\" className={(styles[\"icon-svg\"] || \"icon-svg\") + \" \" + (styles[\"rs-icon\"] || \"rs-icon\")} fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 24 24\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><g stroke=\"none\"><path fill=\"none\" d=\"M0 0h24v24H0z\" /><path d=\"M18 19h1V6.828L17.172 5H16v4H7V5H5v14h1v-7h12v7zM4 3h14l2.707 2.707a1 1 0 01.293.707V20a1 1 0 01-1 1H4a1 1 0 01-1-1V4a1 1 0 011-1zm4 11v5h8v-5H8z\" /></g></svg>);","import Editor from \"@monaco-editor/react\";\r\nimport { Theme } from \"enums/page-view\";\r\nimport { observer } from \"mobx-react\";\r\nimport { FC, useCallback, useMemo, useState } from \"react\";\r\nimport { FlexboxGrid, IconButton, SelectPicker } from \"rsuite\";\r\nimport { debounce } from \"lodash-es\";\r\n\r\nimport { pageView } from \"store\";\r\nimport { LANGUAGES_LIST } from \"./constants\";\r\n\r\nimport { Header, EditorContainer } from \"./styled\";\r\n\r\nimport SaveIcon from \"icons/save.svg\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface CodeEditorProps {\r\n  content: string;\r\n  onSave: (value: string) => void;\r\n}\r\n\r\nconst CodeEditor: FC<CodeEditorProps> = ({ content, onSave }) => {\r\n  const [value, setValue] = useState(content);\r\n  const [language, setLanguage] = useState(\"javascript\");\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const { theme } = pageView;\r\n\r\n  const localTheme = useMemo(\r\n    () => ({ [Theme.Light]: \"light\", [Theme.Dark]: \"vs-dark\" }[theme]),\r\n    [theme]\r\n  );\r\n\r\n  const languagesOptions = useMemo(\r\n    () =>\r\n      LANGUAGES_LIST.map((lang) => ({\r\n        value: lang,\r\n        label: lang,\r\n      })),\r\n    []\r\n  );\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const onSaveContent = useCallback(\r\n    debounce((val: string) => onSave(val), 1000),\r\n    [onSave]\r\n  );\r\n\r\n  const onChangeValue = useCallback(\r\n    (value) => {\r\n      setValue(value);\r\n      onSaveContent(value);\r\n    },\r\n    [setValue, onSaveContent]\r\n  );\r\n  const onChangeLanguage = useCallback(\r\n    (language) => setLanguage(language),\r\n    [setLanguage]\r\n  );\r\n\r\n  return (\r\n    <div className=\"full-height\">\r\n      <Header>\r\n        <FlexboxGrid\r\n          align=\"middle\"\r\n          justify=\"space-between\"\r\n          className=\"full-height\"\r\n        >\r\n          <FlexboxGrid.Item>\r\n            <SelectPicker\r\n              size=\"xs\"\r\n              data={languagesOptions}\r\n              cleanable={false}\r\n              searchable={false}\r\n              value={language}\r\n              onChange={onChangeLanguage}\r\n            />\r\n          </FlexboxGrid.Item>\r\n          <FlexboxGrid.Item>\r\n            <IconButton\r\n              icon={<SaveIcon />}\r\n              size=\"xs\"\r\n              onClick={() => onSaveContent(value)}\r\n            >\r\n              {t(\"Save\")}\r\n            </IconButton>\r\n          </FlexboxGrid.Item>\r\n        </FlexboxGrid>\r\n      </Header>\r\n      <EditorContainer>\r\n        <Editor\r\n          height=\"100%\"\r\n          value={value}\r\n          theme={localTheme}\r\n          onChange={onChangeValue}\r\n          language={language}\r\n        />\r\n      </EditorContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(CodeEditor);\r\n","import { SubType } from \"enums/notes\";\r\n\r\nexport const SUB_TYPE_OPTIONS = [\r\n  { label: \"Rich\", value: SubType.Rich },\r\n  { label: \"Code\", value: SubType.Code },\r\n];\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { FC, useCallback, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { format } from \"date-fns\";\r\nimport {\r\n  ButtonToolbar,\r\n  Dropdown,\r\n  FlexboxGrid,\r\n  IconButton,\r\n  SelectPicker,\r\n} from \"rsuite\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport Editor from \"components/editor\";\r\nimport EditableTitle from \"components/editable-title\";\r\nimport CodeEditor from \"components/code-editor\";\r\n\r\nimport { notes, pageView } from \"store\";\r\n\r\nimport { NoteType, SubType } from \"enums/notes\";\r\n\r\nimport { NotesFilter, NotesFilterHandler } from \"../types\";\r\nimport { SUB_TYPE_OPTIONS } from \"../utils/constants\";\r\n\r\nimport MoreIcon from \"@rsuite/icons/More\";\r\n\r\nconst TitleContainer = styled.div`\r\n  height: 55px;\r\n  padding: 0px 10px;\r\n`;\r\n\r\nconst EditorContainer = styled.div`\r\n  height: calc(100% - 55px);\r\n`;\r\n\r\nconst Title = styled(EditableTitle)`\r\n  font-size: 22px !important;\r\n  color: var(--rs-primary-700);\r\n`;\r\n\r\ninterface NotesContentProps {\r\n  filter: NotesFilter;\r\n  changeFilter: NotesFilterHandler;\r\n}\r\n\r\nconst NotesContent: FC<NotesContentProps> = ({\r\n  filter: { active },\r\n  changeFilter,\r\n}) => {\r\n  const { items } = notes;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const currentItem = useMemo(\r\n    () => items.find(({ id }) => id === active),\r\n    [active, items]\r\n  );\r\n\r\n  const onSaveEditorContent = useCallback(\r\n    (event) => {\r\n      const { id, title } = currentItem!;\r\n      const content = event.target.getContent();\r\n\r\n      notes.updateNote(id, { content, title });\r\n    },\r\n    [currentItem]\r\n  );\r\n\r\n  const onSaveCodeEditorContent = useCallback(\r\n    (content) => {\r\n      const { id, title } = currentItem!;\r\n\r\n      notes.updateNote(id, { content, title });\r\n    },\r\n    [currentItem]\r\n  );\r\n\r\n  const onChangeSubType = useCallback(\r\n    (nextType) => {\r\n      const { id } = currentItem!;\r\n\r\n      notes.updateNote(id, { subType: nextType });\r\n    },\r\n    [currentItem]\r\n  );\r\n\r\n  const onSaveTitle = useCallback(\r\n    (title) => {\r\n      const { id } = currentItem!;\r\n\r\n      notes.updateNote(id, { title });\r\n    },\r\n    [currentItem]\r\n  );\r\n\r\n  const onDeleteItem = useCallback(() => {\r\n    changeFilter({ active: null });\r\n\r\n    notes.deleteNote(currentItem!.id);\r\n  }, [currentItem, changeFilter]);\r\n\r\n  const onChangePriority = useCallback(\r\n    () => notes.changePriority(currentItem!.id),\r\n    [currentItem]\r\n  );\r\n\r\n  if (!currentItem) {\r\n    return (\r\n      <div className=\"full-height flex-center\">\r\n        <h4>{t(\"Note not selected\")}</h4>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const {\r\n    content = \"\",\r\n    title,\r\n    dateCreated,\r\n    priority,\r\n    type,\r\n    subType,\r\n  } = currentItem;\r\n\r\n  const isRichEditor = subType === SubType.Rich;\r\n\r\n  return (\r\n    <div className=\"full-height\">\r\n      <TitleContainer>\r\n        <FlexboxGrid\r\n          align=\"middle\"\r\n          justify=\"space-between\"\r\n          className=\"full-height\"\r\n        >\r\n          <FlexboxGrid.Item>\r\n            <Title onSave={onSaveTitle} readOnly={type === NoteType.time}>\r\n              {title!}\r\n            </Title>\r\n          </FlexboxGrid.Item>\r\n          <FlexboxGrid.Item>\r\n            <FlexboxGrid\r\n              className=\"full-height w-300\"\r\n              align=\"middle\"\r\n              justify=\"space-between\"\r\n            >\r\n              <FlexboxGrid.Item>\r\n                <time>\r\n                  {format(\r\n                    new Date(dateCreated),\r\n                    `'${t(\"created at\")}' d MMM yyyy '${t(\"in\")}' HH:mm`,\r\n                    pageView.formatOptions\r\n                  )}\r\n                </time>\r\n              </FlexboxGrid.Item>\r\n              <FlexboxGrid.Item>\r\n                <ButtonToolbar>\r\n                  <SelectPicker\r\n                    size=\"sm\"\r\n                    searchable={false}\r\n                    cleanable={false}\r\n                    placement=\"bottomEnd\"\r\n                    data={SUB_TYPE_OPTIONS}\r\n                    onChange={onChangeSubType}\r\n                    value={subType}\r\n                  />\r\n                  <Dropdown\r\n                    renderToggle={(props, ref) => (\r\n                      <IconButton\r\n                        ref={ref}\r\n                        {...props}\r\n                        icon={<MoreIcon />}\r\n                        size=\"sm\"\r\n                      />\r\n                    )}\r\n                    placement=\"bottomEnd\"\r\n                  >\r\n                    <Dropdown.Item onClick={onChangePriority}>\r\n                      {priority ? t(\"Remove\") : t(\"Add to\")} {t(\"priority\")}\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item\r\n                      onClick={onDeleteItem}\r\n                      className=\"delete-button\"\r\n                    >\r\n                      {t(\"Delete note\")}\r\n                    </Dropdown.Item>\r\n                  </Dropdown>\r\n                </ButtonToolbar>\r\n              </FlexboxGrid.Item>\r\n            </FlexboxGrid>\r\n          </FlexboxGrid.Item>\r\n        </FlexboxGrid>\r\n      </TitleContainer>\r\n      <EditorContainer>\r\n        {isRichEditor ? (\r\n          <Editor\r\n            initialValue={content}\r\n            onSaveContent={onSaveEditorContent}\r\n            onBlur={onSaveEditorContent}\r\n          />\r\n        ) : (\r\n          <CodeEditor content={content} onSave={onSaveCodeEditorContent} />\r\n        )}\r\n      </EditorContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(NotesContent);\r\n","import { observer } from \"mobx-react\";\r\nimport { FC, useCallback, useEffect, useMemo } from \"react\";\r\nimport { SelectPicker } from \"rsuite\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { List, ListItem } from \"components/list\";\r\nimport ContextMenu from \"components/context-menu\";\r\n\r\nimport { notes, user } from \"store\";\r\n\r\nimport { NoteType } from \"enums/notes\";\r\n\r\nimport { NotesFilter } from \"../types\";\r\n\r\nimport Star from \"icons/Star\";\r\nimport TrashIcon from \"@rsuite/icons/Trash\";\r\nimport TextImageIcon from \"@rsuite/icons/TextImage\";\r\n\r\nconst StyledList = styled(List)`\r\n  & + .add-control {\r\n    border-radius: 0;\r\n    background: transparent;\r\n    border-top: 1px solid var(--rs-divider-border);\r\n  }\r\n`;\r\n\r\ninterface NotesNavigationProps {\r\n  changeFilter: (newFilter: Partial<NotesFilter>) => void;\r\n  filter: NotesFilter;\r\n}\r\n\r\nconst NotesNavigation: FC<NotesNavigationProps> = ({\r\n  changeFilter,\r\n  filter: { active },\r\n}) => {\r\n  const { sortedItems, todayItem, timeItems } = notes;\r\n  const { t } = useTranslation();\r\n\r\n  const onAddNote = useCallback(\r\n    (title: string) => {\r\n      notes\r\n        .addNote({ title, userId: user.userId, type: NoteType.base })\r\n        .then(\r\n          (addedNote) => addedNote && changeFilter({ active: addedNote.id })\r\n        );\r\n\r\n      return true;\r\n    },\r\n    [changeFilter]\r\n  );\r\n\r\n  const onActiveNote = useCallback(\r\n    (noteId: number) => () => changeFilter({ active: noteId }),\r\n    [changeFilter]\r\n  );\r\n\r\n  const onDeleteNote = useCallback(\r\n    (key) => {\r\n      const noteId = Number(key);\r\n\r\n      if (active === noteId) {\r\n        changeFilter({ active: sortedItems?.[0]?.id });\r\n      }\r\n\r\n      notes.deleteNote(noteId);\r\n    },\r\n    [changeFilter, active, sortedItems]\r\n  );\r\n\r\n  const contextMenuItems = useMemo(\r\n    () => [\r\n      {\r\n        label: t(\"Delete note\"),\r\n        handler: onDeleteNote,\r\n        icon: <TrashIcon />,\r\n        className: \"delete-button\",\r\n      },\r\n    ],\r\n    [onDeleteNote, t]\r\n  );\r\n\r\n  const onChangeItem = useCallback(\r\n    (item) => changeFilter({ active: item }),\r\n    [changeFilter]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!active) {\r\n      changeFilter({ active: todayItem?.id });\r\n    }\r\n  }, [todayItem, changeFilter, active]);\r\n\r\n  return (\r\n    <div className=\"screen-height\">\r\n      <ContextMenu items={contextMenuItems} id=\"notes-context\" />\r\n      <StyledList\r\n        onAddItem={onAddNote}\r\n        addPlaceholder={t(\"Add note\")}\r\n        className=\"p-10\"\r\n        empty={!sortedItems.length}\r\n        emptyPlaceholder={`${t(\"No entries note\")} [+]`}\r\n        title={\r\n          <SelectPicker\r\n            data={timeItems}\r\n            style={{ width: \"100%\" }}\r\n            appearance=\"subtle\"\r\n            cleanable={false}\r\n            value={active!}\r\n            placeholder={t(\"Everyday note\")}\r\n            onChange={onChangeItem}\r\n          />\r\n        }\r\n      >\r\n        {sortedItems.map(({ title, id, priority }) => (\r\n          <ListItem\r\n            key={id}\r\n            onClick={onActiveNote(id)}\r\n            contextMenuId=\"notes-context\"\r\n            contextMenuUId={id}\r\n            active={id === active}\r\n            icon={<TextImageIcon />}\r\n            postfix={\r\n              <Star\r\n                filled={priority}\r\n                onClick={() => notes.changePriority(id)}\r\n              />\r\n            }\r\n          >\r\n            {title}\r\n          </ListItem>\r\n        ))}\r\n      </StyledList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(NotesNavigation);\r\n","import { useCallback, useMemo } from \"react\";\r\nimport { parse, stringify } from \"query-string\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\n\r\nimport { NotesFilter, NotesFilterHandler } from \"../types\";\r\n\r\nconst useNotesFilter = (): [NotesFilter, NotesFilterHandler] => {\r\n  const { search } = useLocation();\r\n  const history = useHistory();\r\n\r\n  const filter = useMemo(() => {\r\n    const { active = 0 } = parse(search, { parseNumbers: true });\r\n\r\n    return {\r\n      active,\r\n    } as NotesFilter;\r\n  }, [search]);\r\n\r\n  const changeFilter = useCallback(\r\n    (newValue: Partial<NotesFilter>) =>\r\n      history.replace({ search: stringify({ ...filter, ...newValue }) }),\r\n    [filter, history]\r\n  );\r\n\r\n  return [filter, changeFilter];\r\n};\r\n\r\nexport default useNotesFilter;\r\n","import { observer } from \"mobx-react\";\r\n\r\nimport PageContent from \"components/page-content\";\r\n\r\nimport NotesContent from \"../components/NotesContent\";\r\nimport NotesNavigation from \"../components/NotesNavigation\";\r\nimport useNotesFilter from \"../utils/useNotesFilter\";\r\n\r\nconst Notes = () => {\r\n  const [filter, changeFilter] = useNotesFilter();\r\n\r\n  return (\r\n    <PageContent\r\n      navigation={\r\n        <NotesNavigation filter={filter} changeFilter={changeFilter} />\r\n      }\r\n    >\r\n      <NotesContent filter={filter} changeFilter={changeFilter} />\r\n    </PageContent>\r\n  );\r\n};\r\n\r\nexport default observer(Notes);\r\n","const Passwords = () => {\r\n  return <div>12</div>;\r\n};\r\n\r\nexport default Passwords;\r\n","import { SearchGroup } from \"../types\";\r\nimport { i18n } from \"store\";\r\n\r\nexport const SEARCH_GROUP_OPTIONS = [\r\n  { label: i18n.t(\"Todo\"), value: SearchGroup.Todo },\r\n  { label: i18n.t(\"Notes\"), value: SearchGroup.Notes },\r\n  { label: i18n.t(\"Passwords\"), value: SearchGroup.Passwords },\r\n];\r\n","import styled from \"styled-components\";\r\n\r\nexport const SearchHeaderContainer = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\n\r\nexport const SearchControl = styled.div``;","import { FC, useCallback } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { FlexboxGrid, Input, TagPicker } from \"rsuite\";\r\n\r\nimport { SearchFilter, UseSearchChange } from \"../types\";\r\nimport { SEARCH_GROUP_OPTIONS } from \"../utils/constants\";\r\n\r\nimport { SearchHeaderContainer, SearchControl } from \"./styled\";\r\n\r\ninterface SearchHeaderProps {\r\n  search: SearchFilter;\r\n  changeSearch: UseSearchChange;\r\n}\r\n\r\nconst SearchHeader: FC<SearchHeaderProps> = ({ search, changeSearch }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const onChangeQuery = useCallback(\r\n    (query) => changeSearch({ query }),\r\n    [changeSearch]\r\n  );\r\n\r\n  const onChangeGroups = useCallback(\r\n    (groups) => changeSearch({ groups }),\r\n    [changeSearch]\r\n  );\r\n\r\n  return (\r\n    <SearchHeaderContainer>\r\n      <FlexboxGrid align=\"middle\" justify=\"space-between\" className=\"m-b-20\">\r\n        <FlexboxGrid.Item>\r\n          <h4>{t(\"Global search\")}</h4>\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item className=\"w-300\">\r\n          <TagPicker\r\n            data={SEARCH_GROUP_OPTIONS}\r\n            searchable={false}\r\n            cleanable={false}\r\n            block\r\n            value={search.groups}\r\n            onChange={onChangeGroups}\r\n          />\r\n        </FlexboxGrid.Item>\r\n      </FlexboxGrid>\r\n\r\n      <SearchControl>\r\n        <Input\r\n          size=\"lg\"\r\n          placeholder={\"Начните вводить для поиска\"}\r\n          value={search.query}\r\n          onChange={onChangeQuery}\r\n        />\r\n      </SearchControl>\r\n    </SearchHeaderContainer>\r\n  );\r\n};\r\n\r\nexport default SearchHeader;\r\n","import { useCallback, useMemo } from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { parse, stringify } from \"query-string\";\r\n\r\nimport { UseSearchResult, SearchFilter } from \"../types\";\r\n\r\nconst useSearch = (): UseSearchResult => {\r\n  const history = useHistory();\r\n  const { search } = useLocation();\r\n\r\n  const filter = useMemo<SearchFilter>(() => {\r\n    const { query, groups = [] } = parse(search, {\r\n      parseNumbers: true,\r\n      arrayFormat: \"index\",\r\n    });\r\n\r\n    return {\r\n      query,\r\n      groups,\r\n    } as SearchFilter;\r\n  }, [search]);\r\n\r\n  const change = useCallback(\r\n    (value) => {\r\n      history.replace({\r\n        search: stringify(Object.assign(filter, value), {\r\n          arrayFormat: \"index\",\r\n        }),\r\n      });\r\n    },\r\n    [history, filter]\r\n  );\r\n\r\n  return [filter, change];\r\n};\r\n\r\nexport default useSearch;\r\n","import { Content, Header } from \"rsuite\";\r\n\r\nimport { SearchHeader } from \"../components\";\r\nimport { useSearch } from \"../utils\";\r\n\r\nconst Search = () => {\r\n  const [search, changeSearch] = useSearch();\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <SearchHeader search={search} changeSearch={changeSearch} />\r\n      </Header>\r\n      <Content>content</Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { routes } from \"../helpers/router\";\r\n\r\nimport { Error404 } from \"./service\";\r\n\r\nimport { TodoList } from \"./todo-list\";\r\nimport { Notes } from \"./notes\";\r\nimport { Passwords } from \"./passwords\";\r\nimport { Search } from \"./search\";\r\n\r\nconst Routes = () => (\r\n  <Switch>\r\n    <Route\r\n      exact\r\n      path={routes.ROOT}\r\n      component={() => <Redirect to={routes.TODO_LIST} />}\r\n    />\r\n\r\n    <Route exact path={routes.LOGIN} component={() => <div>1</div>} />\r\n\r\n    <Route exact path={routes.REGISTRATION} component={() => <div>1</div>} />\r\n\r\n    <Route exact path={routes.TODO_LIST} component={TodoList} />\r\n\r\n    <Route exact path={routes.NOTES} component={Notes} />\r\n\r\n    <Route exact path={routes.PASSWORDS} component={Passwords} />\r\n\r\n    <Route exact path={routes.SEARCH} component={Search} />\r\n\r\n    <Route path=\"*\" component={Error404} />\r\n  </Switch>\r\n);\r\n\r\nexport default Routes;\r\n","import { Avatar, IconButton, Sidebar } from \"rsuite\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const LogoContainer = styled.div`\r\n  padding: 15px;\r\n\r\n  & svg[data-expanded=\"false\"] {\r\n    width: 20px;\r\n  }\r\n`;\r\n\r\nexport const LogoTitle = styled.span`\r\n  font-size: 20px;\r\n  margin-left: 10px;\r\n  transition: display 1s linear;\r\n\r\n  &[data-expanded=\"false\"] {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const StyledSidebar = styled(Sidebar)`\r\n  position: relative;\r\n  border-right: 1px solid var(--rs-divider-border);\r\n`;\r\n\r\nexport const TogglerButton = styled(IconButton)`\r\n  position: absolute;\r\n  right: -12px;\r\n  bottom: 80px;\r\n  z-index: 5;\r\n`;\r\n\r\nexport const UserAvatar = styled(Avatar)`\r\n  margin-right: 20px;\r\n  position: absolute;\r\n  left: 18px;\r\n  top: 15px;\r\n`;\r\n\r\nexport const UserTitle = styled.p`\r\n  font-size: 16px;\r\n  color: var(--rs-primary-700);\r\n`;\r\n","const Moon = () => (\r\n  <svg\r\n    className=\"rs-dropdown-item-menu-icon rs-icon\"\r\n    viewBox=\"0 0 1024 1024\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"1em\"\r\n    height=\"1em\"\r\n    aria-hidden=\"true\"\r\n    focusable=\"false\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <defs>\r\n      <style></style>\r\n    </defs>\r\n    <path d=\"M888.16 678.96c-127.793 31.948-261.975-12.78-357.82-102.235-127.793-127.792-153.351-325.871-57.507-479.223 31.948-44.727-12.78-108.623-70.286-95.844-95.844 19.169-185.3 70.286-255.585 140.572C51.117 238.075 0 372.257 0 506.44c0 134.182 51.117 268.364 153.351 364.209C249.196 972.883 376.99 1024 517.561 1024c140.572 0 268.364-51.117 364.21-153.351 25.558-25.559 51.116-57.507 76.675-95.845 25.558-44.727-12.78-108.624-70.286-95.844z\"></path>\r\n    <path d=\"M1003.173 238.075c25.559-25.559 25.559-63.897 0-89.455-25.558-25.559-63.896-25.559-89.455 0-19.169 19.168-83.065 19.168-102.234 0-25.559-25.559-63.896-25.559-89.455 0-25.558 25.558-25.558 63.896 0 89.455 19.169 19.168 19.169 83.065 0 102.234-25.558 25.558-25.558 63.896 0 89.455 25.559 25.558 63.896 25.558 89.455 0 19.169-19.17 83.065-19.17 102.234 0 25.559 25.558 63.897 25.558 89.455 0 25.559-25.559 25.559-63.897 0-89.455-19.169-19.17-19.169-83.066 0-102.234z\"></path>\r\n  </svg>\r\n);\r\n\r\nexport default Moon;\r\n","const Sun = () => (\r\n  <svg\r\n    className=\"rs-dropdown-item-menu-icon rs-icon\"\r\n    viewBox=\"0 0 1024 1024\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"1em\"\r\n    height=\"1em\"\r\n    aria-hidden=\"true\"\r\n    focusable=\"false\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <defs>\r\n      <style></style>\r\n    </defs>\r\n    <path d=\"M512 204.8c-169.7 0-307.2 137.603-307.2 307.2 0 169.7 137.5 307.2 307.2 307.2S819.2 681.7 819.2 512c0-169.597-137.5-307.2-307.2-307.2zM477.804 0h68.3v136.5h-68.3zm0 887.5h68.3V1024h-68.3zM270.598 222.414l-48.299 48.298-96.5-96.5 48.298-48.299zm-48.293 530.995l48.298 48.299-96.495 96.5-48.298-48.298zM0 477.901h136.5v68.3H0zm887.5 0H1024v68.3H887.5zm10.702 372.002l-48.3 48.299-96.596-96.598 48.298-48.298zM753.402 222.4l48.299 48.3 96.603-96.502L850 125.901z\"></path>\r\n  </svg>\r\n);\r\n\r\nexport default Sun;\r\n","const Language = () => (\r\n  <svg\r\n    className=\"rs-icon\"\r\n    viewBox=\"0 0 1024 1024\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"1em\"\r\n    height=\"1em\"\r\n    aria-hidden=\"true\"\r\n    focusable=\"false\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <defs>\r\n      <style></style>\r\n    </defs>\r\n    <path d=\"M371.2 98.8c-10.4 3.8-17.2 9-22.6 17.2-6.8 9.8-8.6 18.8-8.6 42.4v21.4l-121.4.6c-114.2.6-122 .8-128.6 4.4-16.8 8.8-24.8 22-24.8 40.2 0 17.8 8 31.2 23.8 39.6l8 4.4 202.6.6 202.6.4-1.4 4.6c-5.6 18.6-26.8 68-45.8 106.4-19.6 40-55.8 103-59 103-1.6 0-30.2-40.8-47.6-68-8.8-13.8-22.4-37.4-30.4-52.6-16.2-30.8-22.6-37.4-39.6-41.2-24.8-5.2-47 9.6-52.6 35-2 8.8-1.8 12 1.2 21.8 8 25 53.4 99.8 92.8 152.6 17.6 23.6 18.4 25 15.4 29.2-5.8 9-66.6 68.6-91.2 89.4-30 25.4-59.6 47.6-81.2 60.8-19.8 12.2-24.2 16-29.4 26-5.8 11-5.8 29 0 40 8.4 15.8 21.6 23.8 39.6 23.8 13.6 0 20-2.8 47-20.6 46.6-30.6 94.2-70.2 143.2-119.4l34-34.2 22 21.2c28 27.4 51.6 47.4 61.8 52.8 10.4 5.4 29 5.8 39 .6 16.6-8.8 24.8-22 24.8-40.2 0-17-5.2-25.6-25.2-42.2-22.2-18.2-64-60.2-63.2-63.2.4-1.4 9.2-15.6 19.8-31.6 10.6-16 25-38.8 32-51 27.8-48.6 62.6-126.4 82.2-183.4l6.6-19.4 38-.6c34.4-.6 38.8-1 46-5 15.8-8.4 23.8-21.8 23.8-39.6 0-18.2-8-31.4-24.8-40.2-6.6-3.6-14.4-3.8-128.4-4.4l-121.2-.6-.8-25.4c-.8-26.6-2.6-33.4-12.4-44-10.4-11.6-31.6-16.8-46-11.6zm352 308c-9.4 3.6-16.6 8.6-21.8 15.6-4.8 6.4-186.8 447-188.4 456.4-4.8 25.2 18.4 51.4 45.2 51.2 8 0 22.8-6.4 29.4-12.6 6.4-5.8 10.6-14.6 30.4-63l16.6-40.4h204.8l18.8 45.2c20.2 49.4 23.6 55.4 33.6 62.2 30.2 20.4 69.2-.2 69-36.4-.2-11.2-6.2-26.6-88.6-226-99-239.4-96.8-234.2-102.8-240.6-10.8-11.6-31.8-16.8-46.2-11.6zM769 643c17.2 41.8 31.8 77.2 32.4 78.4.8 2-12.8 2.6-64.4 2.6-36 0-65-.8-64.6-1.8 6-15.4 64.6-156 64.8-155.6.2.2 14.4 34.6 31.8 76.4z\"></path>\r\n  </svg>\r\n);\r\n\r\nexport default Language;\r\n","import { useCallback, useMemo } from \"react\";\r\nimport {\r\n  Container,\r\n  Nav,\r\n  Sidenav,\r\n  CustomProvider,\r\n  FlexboxGrid,\r\n  Dropdown,\r\n} from \"rsuite\";\r\nimport { ruRU, enUS } from \"rsuite/locales\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport UserInfoIcon from \"@rsuite/icons/UserInfo\";\r\nimport SettingIcon from \"@rsuite/icons/Setting\";\r\nimport UserChangeIcon from \"@rsuite/icons/UserChange\";\r\n\r\nimport TodoListIcon from \"icons/todolist.svg\";\r\nimport NotesIcon from \"icons/notes.svg\";\r\nimport PasswordsIcon from \"icons/passwords.svg\";\r\nimport SearchIcon from \"icons/search.svg\";\r\n\r\nimport { routes } from \"helpers/router\";\r\n\r\nimport { Language, Theme } from \"enums/page-view\";\r\n\r\nimport { pageView, user } from \"store\";\r\nimport Routes from \"pages\";\r\n\r\nimport {\r\n  LogoContainer,\r\n  LogoTitle,\r\n  StyledSidebar,\r\n  UserAvatar,\r\n  UserTitle,\r\n} from \"./appStyles\";\r\nimport Moon from \"icons/Moon\";\r\nimport Sun from \"icons/Sun\";\r\nimport LanguageIcon from \"icons/Language\";\r\n\r\nimport \"rsuite/dist/rsuite.min.css\";\r\nimport \"./styles.css\";\r\n\r\nconst App = () => {\r\n  const { pathname } = useLocation();\r\n  const { language, theme } = pageView;\r\n  const { t } = useTranslation();\r\n\r\n  const onSelectOption = useCallback((key?: string) => {\r\n    console.log(key);\r\n\r\n    if (!key) {\r\n      return;\r\n    }\r\n\r\n    if ([Theme.Light, Theme.Dark].includes(key as Theme)) {\r\n      pageView.changeTheme(key as Theme);\r\n    }\r\n\r\n    if ([Language.Ru, Language.EnUS].includes(key as Language)) {\r\n      pageView.changeLanguage(key as Language);\r\n    }\r\n  }, []);\r\n\r\n  const locale = useMemo(\r\n    () => (language === Language.Ru ? ruRU : enUS),\r\n    [language]\r\n  );\r\n\r\n  return (\r\n    <CustomProvider theme={theme} locale={locale}>\r\n      <Container>\r\n        <StyledSidebar\r\n          // width={pageView.expandedSideBar ? 220 : 56}\r\n          width={56}\r\n          collapsible\r\n          className=\"flex-column\"\r\n        >\r\n          <Sidenav.Header>\r\n            <LogoContainer>\r\n              <FlexboxGrid align=\"middle\">\r\n                <FlexboxGrid.Item>\r\n                  <div className=\"logo\">\r\n                    <span>YM</span>\r\n                  </div>\r\n                </FlexboxGrid.Item>\r\n                <FlexboxGrid.Item>\r\n                  <LogoTitle data-expanded={pageView.expandedSideBar}>\r\n                    You manager\r\n                  </LogoTitle>\r\n                </FlexboxGrid.Item>\r\n              </FlexboxGrid>\r\n            </LogoContainer>\r\n          </Sidenav.Header>\r\n          <Sidenav\r\n            className=\"flex-column flex-auto\"\r\n            expanded={pageView.expandedSideBar}\r\n            appearance=\"subtle\"\r\n          >\r\n            <Sidenav.Body className=\"flex-column flex-auto\">\r\n              <Nav className=\"flex-auto\" activeKey={pathname}>\r\n                <Nav.Item\r\n                  eventKey={routes.SEARCH}\r\n                  icon={<SearchIcon />}\r\n                  as={Link}\r\n                  to={routes.SEARCH}\r\n                >\r\n                  {t(\"Search\")}\r\n                </Nav.Item>\r\n\r\n                <Nav.Item\r\n                  eventKey={routes.TODO_LIST}\r\n                  icon={<TodoListIcon />}\r\n                  as={Link}\r\n                  to={routes.TODO_LIST}\r\n                >\r\n                  {t(\"Todo\")}\r\n                </Nav.Item>\r\n\r\n                <Nav.Item\r\n                  eventKey={routes.NOTES}\r\n                  icon={<NotesIcon />}\r\n                  as={Link}\r\n                  to={routes.NOTES}\r\n                >\r\n                  {t(\"Notes\")}\r\n                </Nav.Item>\r\n\r\n                <Nav.Item\r\n                  eventKey={routes.PASSWORDS}\r\n                  icon={<PasswordsIcon />}\r\n                  as={Link}\r\n                  to={routes.PASSWORDS}\r\n                >\r\n                  {t(\"Passwords\")}\r\n                </Nav.Item>\r\n              </Nav>\r\n              <Nav activeKey={pathname}>\r\n                <Dropdown\r\n                  placement=\"rightEnd\"\r\n                  activeKey={pathname}\r\n                  onSelect={onSelectOption}\r\n                  title={<UserTitle>{user.username}</UserTitle>}\r\n                  icon={\r\n                    <UserAvatar size=\"xs\">{user.usernameSymbols}</UserAvatar>\r\n                  }\r\n                >\r\n                  <Dropdown.Item icon={<UserInfoIcon />}>\r\n                    {t(\"Profile\")}\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    eventKey={routes.SETTINGS}\r\n                    as={Link}\r\n                    to={routes.SETTINGS}\r\n                    icon={<SettingIcon />}\r\n                  >\r\n                    {t(\"Settings\")}\r\n                  </Dropdown.Item>\r\n\r\n                  <Dropdown.Item divider />\r\n\r\n                  <Dropdown.Menu\r\n                    title={t(\"Language\")}\r\n                    icon={<LanguageIcon />}\r\n                    activeKey={language}\r\n                  >\r\n                    <Dropdown.Item eventKey={Language.Ru}>\r\n                      Русский\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item eventKey={Language.EnUS}>\r\n                      English\r\n                    </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n\r\n                  <Dropdown.Menu\r\n                    title={t(\"Theme\")}\r\n                    icon={theme === Theme.Light ? <Sun /> : <Moon />}\r\n                    activeKey={theme}\r\n                  >\r\n                    <Dropdown.Item eventKey={Theme.Light}>\r\n                      {t(\"Light\")}\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item eventKey={Theme.Dark}>\r\n                      {t(\"Dark\")}\r\n                    </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n\r\n                  <Dropdown.Item divider />\r\n\r\n                  <Dropdown.Item\r\n                    eventKey={routes.CHANGE_USER}\r\n                    as={Link}\r\n                    to={routes.CHANGE_USER}\r\n                    icon={<UserChangeIcon />}\r\n                  >\r\n                    {t(\"Change user\")}\r\n                  </Dropdown.Item>\r\n                </Dropdown>\r\n              </Nav>\r\n            </Sidenav.Body>\r\n          </Sidenav>\r\n        </StyledSidebar>\r\n\r\n        <Container>\r\n          <Routes />\r\n        </Container>\r\n      </Container>\r\n    </CustomProvider>\r\n  );\r\n};\r\n\r\nexport default observer(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}